{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handleIdHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","getChatUserId","superGroupId","getSupergroupId","basicGroupId","getBasicGroupId","channelId","getChannelId","bio","getChatBio","isMe","isGroupChat","users","member","user","log","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.6ddc56a8.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(result);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                Are you sure you want clear history?\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\r\n                                    : t('DeleteForAll')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './LeaveVoiceChatDialog.css';\r\n\r\nclass LeaveVoiceChatDialog extends React.Component {\r\n    state = {\r\n        discard: false\r\n    };\r\n\r\n    handleDiscardChange = () => {\r\n        const { discard } = this.state;\r\n\r\n        this.setState({\r\n            discard: !discard\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { discard } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.getString('VoipGroupLeaveAlertText')}\r\n                    </DialogContentText>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\r\n                        label={t('VoipGroupEndChat')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\r\n                        {t('VoipGroupLeave')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLeaveVoiceChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './ReportChatDialog.css';\r\n\r\nclass ReportChatDialog extends React.Component {\r\n\r\n    handleReport = type => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(true, { '@type': type });\r\n    }\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\r\n                <div className='report-chat-dialog-content'>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\r\n                        <ListItemText primary={t('ReportChatSpam')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\r\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\r\n                        <ListItemText primary={t('ReportChatViolence')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\r\n                        <ListItemText primary={t('ReportChatPornography')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\r\n                        <ListItemText primary={t('ReportChatChild')}/>\r\n                    </ListItem>\r\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\r\n                        <ListItemText primary={t('ReportChatOther')}/>\r\n                    </ListItem>\r\n                </div>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('ReportChat')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nReportChatDialog.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ReportChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport ReportChatDialog from './Popup/ReportChatDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { reportChat } from '../Actions/Chat';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport CloseIcon from '../Assets/Icons/Close';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null,\r\n        leaveVoiceChatAlert: null,\r\n        reportChatAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\r\n    }\r\n\r\n    onClientUpdateReportChat = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({ reportChatAlert: { chatId, messageIds }});\r\n    };\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateLeaveVoiceChatAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ leaveVoiceChatAlert: { params }});\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        const { alert } = this.state;\r\n        if (!alert) return;\r\n\r\n        const { params } = alert;\r\n        this.setState({ alert: null });\r\n\r\n        const { onResult } = params;\r\n        onResult && onResult(result);\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            event && event.preventDefault();\r\n\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\r\n        const { leaveVoiceChatAlert } = this.state;\r\n\r\n        this.setState({ leaveVoiceChatAlert: null });\r\n\r\n        const { params } = leaveVoiceChatAlert;\r\n        if (!params) return;\r\n\r\n        const { onResult } = params;\r\n\r\n        onResult && onResult(resultParams);\r\n    };\r\n\r\n    handleReportChatContinue = (result, params) => {\r\n        const { t } = this.props;\r\n        const { reportChatAlert } = this.state;\r\n\r\n        this.setState({ reportChatAlert: null });\r\n        if (!result) return;\r\n\r\n        const { chatId, messageIds } = reportChatAlert;\r\n\r\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert,\r\n            leaveVoiceChatAlert,\r\n            reportChatAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        } else if (leaveVoiceChatAlert) {\r\n            const { params } = leaveVoiceChatAlert;\r\n\r\n            return (\r\n                <LeaveVoiceChatDialog\r\n                    params={params}\r\n                    onClose={this.handleLeaveVoiceChatContinue}/>\r\n            );\r\n        } else if (reportChatAlert) {\r\n            const { chatId, messageIds } = reportChatAlert;\r\n\r\n            return (\r\n                <ReportChatDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleReportChatContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\r\n    'CallEnd'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CallSettingsVideoPreview.css';\r\n\r\nclass CallSettingsVideoPreview extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            const video = document.getElementById('call-settings-video');\r\n            if (video) {\r\n                video.srcObject = stream;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCallSettingsVideoPreview.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default CallSettingsVideoPreview;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getAmplitude } from '../../Calls/Utils';\r\nimport './GroupCallMicAmplitude.css';\r\n\r\nclass GroupCallMicAmplitude extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        this.timer = null;\r\n\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { stream } = this.props;\r\n        if (stream) {\r\n            this.removeAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { stream } = this.props;\r\n        if (prevProps.stream !== stream) {\r\n            this.removeAnalyser(prevProps.stream);\r\n            this.addAnalyser(stream);\r\n        }\r\n    }\r\n\r\n    addAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        const { audioContext } = this;\r\n        if (!audioContext) return;\r\n\r\n        this.streamSource = audioContext.createMediaStreamSource(stream);\r\n        if (!this.analyser) {\r\n            const analyser = audioContext.createAnalyser();\r\n            analyser.minDecibels = -100;\r\n            analyser.maxDecibels = -30;\r\n            analyser.smoothingTimeConstant = 0.05;\r\n            analyser.fftSize = 1024;\r\n\r\n            this.analyser = analyser;\r\n        }\r\n        this.streamSource.connect(this.analyser);\r\n\r\n        this.timer = setInterval(() => this.analyse(), 100);\r\n    }\r\n\r\n    removeAnalyser(stream) {\r\n        if (!stream) return;\r\n\r\n        if (this.analyser && this.streamSource) {\r\n            this.streamSource.disconnect(this.analyser);\r\n        }\r\n\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    analyse() {\r\n        const { analyser } = this;\r\n        if (!analyser) return;\r\n\r\n        const array = new Uint8Array(analyser.frequencyBinCount);\r\n        analyser.getByteFrequencyData(array);\r\n        const value = getAmplitude(array, 1.5);\r\n\r\n        this.setState({\r\n            value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n\r\n        let d = '';\r\n        for (let i = 0; i < 35; i++) {\r\n            const x = i * 8 + 1.5;\r\n            d += `M${x},0v15Z`;\r\n        }\r\n\r\n        const bars = (\r\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\r\n                <path d={d} fill='currentColor' strokeWidth={3}/>\r\n            </svg>\r\n        );\r\n\r\n        return (\r\n            <div className='group-call-mic-amplitude'>\r\n                {bars}\r\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\r\n                    {bars}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicAmplitude.propTypes = {\r\n    stream: PropTypes.object\r\n};\r\n\r\nexport default GroupCallMicAmplitude;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\r\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\r\nimport { getStream } from '../../Calls/Utils';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport './GroupCallSettings.css';\r\n\r\nclass GroupCallSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                const { openDeviceSelect } = this.state;\r\n                if (openDeviceSelect) {\r\n                    this.handleCloseDeviceSelect();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n\r\n                this.handleCancel();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId, callId } = props;\r\n        const { prevGroupCallId, prevCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            let muteSettings = { };\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const {\r\n                    mute_new_participants: muteNewParticipants,\r\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n                } = groupCall;\r\n\r\n                muteSettings = {\r\n                    muteNewParticipants,\r\n                    allowedChangeMuteNewParticipants\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo,\r\n                ...muteSettings\r\n            };\r\n        } else if (prevCallId !== callId) {\r\n            const { devices } = CallStore;\r\n\r\n            const outputDeviceId = CallStore.getOutputDeviceId();\r\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n            return {\r\n                prevCallId: callId,\r\n                devices,\r\n                outputDeviceId,\r\n                output,\r\n                inputAudioDeviceId,\r\n                inputAudio,\r\n                inputVideoDeviceId,\r\n                inputVideo\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\r\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\r\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\r\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n\r\n        this.closeStreams();\r\n    }\r\n\r\n    closeStreams() {\r\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\r\n        if (inputAudioStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\r\n                inputAudioStream.getAudioTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n\r\n        if (inputVideoStream) {\r\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\r\n                inputVideoStream.getVideoTracks().forEach(x => {\r\n                    x.stop();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n        if (!group_call) return;\r\n\r\n        const {\r\n            id,\r\n            mute_new_participants: muteNewParticipants,\r\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\r\n        } = group_call;\r\n        if (id !== groupCallId) return;\r\n\r\n        this.setState({\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        });\r\n    };\r\n\r\n    onDeviceChange = async () => {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        CallStore.devices = devices;\r\n\r\n        const outputDeviceId = CallStore.getOutputDeviceId();\r\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\r\n\r\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\r\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\r\n\r\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\r\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\r\n\r\n        this.setState({\r\n            devices,\r\n            outputDeviceId,\r\n            output,\r\n            inputAudioDeviceId,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideo\r\n        });\r\n    };\r\n\r\n    handleOutputChange = event => {\r\n        const outputDeviceId = event.target.value;\r\n\r\n        this.setState({ outputDeviceId });\r\n    }\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\r\n            return (\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => { closeSnackbar(snackKey); }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            )\r\n        });\r\n    };\r\n\r\n    handleOpenDeviceSelect = async type => {\r\n        switch (type) {\r\n            case 'inputAudio': {\r\n                const { inputAudio } = this.state;\r\n                if (!inputAudio.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'output': {\r\n                const { output } = this.state;\r\n                if (!output.length) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            openDeviceSelect: { type }\r\n        });\r\n    };\r\n\r\n    handleCloseDeviceSelect = () => {\r\n        this.setState({\r\n            openDeviceSelect: null\r\n        });\r\n    };\r\n\r\n    handleSelectDevice = async (type, deviceId) => {\r\n        this.handleCloseDeviceSelect();\r\n\r\n        switch (type) {\r\n            case 'output': {\r\n                CallStore.setOutputDeviceId(deviceId);\r\n                this.setState({\r\n                    outputDeviceId: deviceId\r\n                });\r\n                break;\r\n            }\r\n            case 'inputAudio': {\r\n                const { currentGroupCall, currentCall } = CallStore;\r\n                if (currentGroupCall) {\r\n                    const { streamManager } = currentGroupCall;\r\n                    if (!streamManager) return;\r\n\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                } else if (currentCall) {\r\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\r\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\r\n\r\n                    if (inputAudioStream) {\r\n                        inputAudioStream.getAudioTracks().forEach(t => {\r\n                            t.stop()\r\n                        });\r\n                    }\r\n\r\n                    const stream = await getStream({\r\n                        audio: { deviceId: { exact: deviceId } },\r\n                        video: false\r\n                    });\r\n\r\n                    this.setState({\r\n                        inputAudioDeviceId: deviceId,\r\n                        inputAudioStream: stream\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'inputVideo': {\r\n                const { currentCall } = CallStore;\r\n                if (!currentCall) return;\r\n\r\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\r\n\r\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\r\n\r\n                if (inputVideoStream) {\r\n                    inputVideoStream.getVideoTracks().forEach(t => {\r\n                        t.stop()\r\n                    });\r\n                }\r\n\r\n                const stream = await getStream({\r\n                    audio: false,\r\n                    video: { deviceId: { exact: deviceId } }\r\n                });\r\n\r\n                this.setState({\r\n                    inputVideoDeviceId: deviceId,\r\n                    inputVideoStream: stream\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleEnd = () => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\r\n    };\r\n\r\n    handleMuteNewParticipants = () => {\r\n        const { groupCallId } = this.props;\r\n        const { muteNewParticipants } = this.state;\r\n\r\n        this.setState({\r\n            muteNewParticipants: !muteNewParticipants\r\n        });\r\n\r\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { onClose } = this.props;\r\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\r\n\r\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\r\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\r\n        }\r\n\r\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\r\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\r\n        }\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose();\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const {\r\n            inputAudioDeviceId,\r\n            inputAudioStream,\r\n            inputAudio,\r\n            inputVideoDeviceId,\r\n            inputVideoStream,\r\n            inputVideo,\r\n            outputDeviceId,\r\n            output,\r\n            openDeviceSelect,\r\n            muteNewParticipants,\r\n            allowedChangeMuteNewParticipants\r\n        } = this.state;\r\n\r\n\r\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\r\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\r\n\r\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\r\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\r\n\r\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\r\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        if (openDeviceSelect) {\r\n            const { type } = openDeviceSelect;\r\n            let items = [];\r\n            let deviceId = null;\r\n            switch (type) {\r\n                case 'output': {\r\n                    items = output;\r\n                    deviceId = outputDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputAudio': {\r\n                    items = inputAudio;\r\n                    deviceId = inputAudioDeviceId;\r\n                    break;\r\n                }\r\n                case 'inputVideo': {\r\n                    items = inputVideo;\r\n                    deviceId = inputVideoDeviceId;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className='group-call-settings-device-select'>\r\n                    <div className='group-call-settings-panel'>\r\n                        <div className='group-call-settings-panel-header'>\r\n                            <div className='group-call-panel-caption'>\r\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='group-call-settings-panel-content'>\r\n                            {items.map(x => (\r\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\r\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className='group-call-settings-panel-buttons'>\r\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\r\n                                {t('OK')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        const canManage = canManageVoiceChats(chatId);\r\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\r\n\r\n        return (\r\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\r\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\r\n                    <div className='group-call-settings-panel-header'>\r\n                        <div className='group-call-panel-caption'>\r\n                            <div className='group-call-title'>{t('Settings')}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-settings-panel-content'>\r\n                        { canManage && allowedChangeMuteNewParticipants && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\r\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\r\n                                <Switch\r\n                                    disableRipple\r\n                                    classes={{\r\n                                        root: 'group-call-settings-panel-switch-root',\r\n                                        switchBase: 'group-call-settings-panel-switch-base',\r\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\r\n                                        checked: 'group-call-settings-panel-switch-checked',\r\n                                        track: 'group-call-settings-panel-switch-track'\r\n                                    }}\r\n                                    checked={muteNewParticipants}\r\n                                    onChange={this.handleMuteNewParticipants}/>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\r\n                        </div>\r\n\r\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\r\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\r\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\r\n                        </div>\r\n\r\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\r\n\r\n                        { callId && (\r\n                            <>\r\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\r\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\r\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\r\n                                </div>\r\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\r\n                                {/*<div>*/}\r\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\r\n                                {/*</div>*/}\r\n                            </>\r\n                        )}\r\n                        { username && (\r\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\r\n                                {t('VoipGroupCopyInviteLink')}\r\n                            </div>\r\n                        )}\r\n                        { canManage && (\r\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\r\n                                {t('VoipGroupEndChat')}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='group-call-settings-panel-buttons'>\r\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\r\n                            {t('Done')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettings.propTypes = {\r\n    callId: PropTypes.number,\r\n    groupCallId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallSettings);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\r\n    'Mic'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\r\n    'MicOff'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport MenuIcon from '../../Assets/Icons/More';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { closeCallPanel } from '../../Actions/Call';\r\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\r\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './CallPanel.css';\r\n\r\nconst SUPPORTS_ROTATION = true;\r\n\r\nclass CallPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.callPanelRef = React.createRef();\r\n\r\n        const { callId } = props;\r\n\r\n        this.state = {\r\n            openSettings: false,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0,\r\n            fullScreen: false,\r\n\r\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\r\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.on('updateCall', this.handleUpdateCall);\r\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (callPanel) {\r\n            const prefixes = ['', 'moz', 'webkit', 'ms']\r\n            prefixes.forEach(x => {\r\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\r\n            });\r\n        }\r\n\r\n        CallStore.off('updateCall', this.handleUpdateCall);\r\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\r\n    }\r\n\r\n    onClientUpdateCallMediaState = update => {\r\n        const { callId: currentCallId } = this.props;\r\n        const { callId, mediaState, type } = update;\r\n        if (callId !== currentCallId) return;\r\n\r\n        if (type === 'input') {\r\n            this.setState({ inputMediaState: mediaState });\r\n        } else {\r\n            this.setState({ outputMediaState: mediaState });\r\n        }\r\n    };\r\n\r\n    handleUpdateCall = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleFullScreenChange = () => {\r\n        this.setState({\r\n            fullScreen: this.isFullScreen()\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleAccept = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        await CallStore.p2pAcceptCall(callId);\r\n    };\r\n\r\n    handleDiscard = async event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { callId } = this.props;\r\n        if (!callId) return;\r\n\r\n        closeCallPanel();\r\n        setTimeout(() => {\r\n            CallStore.p2pHangUp(callId, true);\r\n        }, 100);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        if (this.isFullScreen()) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.handleDiscard(null);\r\n    };\r\n\r\n    handleShareScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { currentCall } = CallStore;\r\n        if (!currentCall) return;\r\n\r\n        const { screenStream } = currentCall;\r\n        if (screenStream) {\r\n            CallStore.p2pStopScreenSharing();\r\n        } else {\r\n            CallStore.p2pStartScreenSharing();\r\n        }\r\n    };\r\n\r\n    handleFullScreen = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        setTimeout(() => {\r\n            if (this.isFullScreen()) {\r\n                this.exitFullscreen();\r\n                return;\r\n            }\r\n\r\n            this.requestFullscreen();\r\n        }, 250);\r\n    }\r\n\r\n    isFullScreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        return fullscreenElement === callPanel;\r\n    }\r\n\r\n    requestFullscreen() {\r\n        const callPanel = this.callPanelRef.current;\r\n        if (!callPanel) return false;\r\n\r\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\r\n\r\n        method && method.call(callPanel);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { currentTarget } = event;\r\n\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (anchorEl) {\r\n            this.setState({ anchorEl: null });\r\n        } else {\r\n            this.setState({\r\n                anchorEl: currentTarget\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAudio = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const { muted } = inputMediaState;\r\n\r\n        CallStore.p2pAudioEnabled(muted);\r\n    };\r\n\r\n    handleVideo = () => {\r\n        const { inputMediaState } = this.state;\r\n        if (!inputMediaState) return;\r\n\r\n        const muted = inputMediaState.videoState === 'inactive';\r\n\r\n        CallStore.p2pVideoEnabled(muted)\r\n    };\r\n\r\n    render() {\r\n        const { callId, t } = this.props;\r\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\r\n        const { currentCall } = CallStore;\r\n\r\n        const call = CallStore.p2pGet(callId);\r\n        if (!call) return null;\r\n\r\n        const { user_id: userId, is_outgoing, state } = call;\r\n\r\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\r\n\r\n        let outputVideoStyle = null;\r\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\r\n            outputVideoStyle = {\r\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\r\n            };\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\r\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\r\n                        <div className='group-call-join-panel-subtitle'>\r\n                            {p2pGetCallStatus(callId)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\r\n                        <MenuIcon />\r\n                    </div>\r\n                    <Popover\r\n                        container={this.callPanelRef.current}\r\n                        classes={{\r\n                            paper: 'group-call-participant-menu-root'\r\n                        }}\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        getContentAnchorEl={null}\r\n                        disableRestoreFocus={true}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleOpenSettings}>\r\n                                <ListItemText primary={t('Settings')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleFullScreen}>\r\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleShareScreen}>\r\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\r\n                            </MenuItem>\r\n                        </MenuList>\r\n                    </Popover>\r\n                </div>\r\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\r\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\r\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\r\n                </div>\r\n                { outputMediaState && outputMediaState.muted && (\r\n                    <div className='call-panel-microphone-hint'>\r\n                        <div className='call-panel-microphone-hint-wrapper'>\r\n                            <MicOffIcon/>\r\n                            <div className='call-panel-microphone-hint-text'>\r\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className='group-call-panel-buttons'>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\r\n                        </div>\r\n                    </div>\r\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\r\n                        <div className='group-call-panel-button'>\r\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\r\n                                <CallIcon />\r\n                            </div>\r\n                            <div className='group-call-panel-button-text'>\r\n                                {t('VoipAnswerCall')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\r\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCallPanel.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(CallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CallPanel from './CallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass Call extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { callId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <CallPanel callId={callId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCall.propTypes = {\r\n    callId: PropTypes.number\r\n};\r\n\r\nexport default Call;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\n\r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return;\r\n\r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');\r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\r\n\r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\n\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen}/>\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\r\n\r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef}/>);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { compose } from \"../../Utils/HOC\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport Fingerprint from \"@material-ui/icons/Fingerprint\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport CloseIcon from \"../../Assets/Icons/Close\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertDriveFileIcon from \"../../Assets/Icons/Document2\";\r\nimport InsertLinkIcon from \"@material-ui/icons/InsertLink\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport PhotoIcon from \"../../Assets/Icons/SharedMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport User from \"../Tile/User\";\r\nimport Chat from \"../Tile/Chat\";\r\nimport ChatDetailsHeader from \"./ChatDetailsHeader\";\r\nimport NotificationsListItem from \"./NotificationsListItem\";\r\nimport SharedMediaTabs from \"./SharedMedia/SharedMediaTabs\";\r\nimport SharedMediaContent from \"./SharedMedia/SharedMediaContent\";\r\nimport { copy } from \"../../Utils/Text\";\r\nimport {\r\n  getFormattedText,\r\n  getUrlMentionHashtagEntities,\r\n} from \"../../Utils/Message\";\r\nimport {\r\n  getChatUsername,\r\n  getChatUserId,\r\n  getChatPhoneNumber,\r\n  getChatBio,\r\n  getSupergroupId,\r\n  getBasicGroupId,\r\n  isGroupChat,\r\n  getGroupChatMembers,\r\n  getChatFullInfo,\r\n  isPrivateChat,\r\n  isMeChat,\r\n  isChannelChat,\r\n  getChannelId\r\n} from \"../../Utils/Chat\";\r\nimport { getUserStatusOrder } from \"../../Utils/User\";\r\nimport { loadUsersContent, loadChatsContent } from \"../../Utils/File\";\r\nimport { formatPhoneNumber } from \"../../Utils/Phone\";\r\nimport {\r\n  openChat,\r\n  openUser,\r\n  setProfileMediaViewerContent,\r\n} from \"../../Actions/Client\";\r\nimport { withRestoreRef, withSaveRef } from \"../../Utils/HOC\";\r\nimport {\r\n  NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n  SCROLL_PRECISION,\r\n} from \"../../Constants\";\r\nimport BasicGroupStore from \"../../Stores/BasicGroupStore\";\r\nimport ChatStore from \"../../Stores/ChatStore\";\r\nimport FileStore from \"../../Stores/FileStore\";\r\nimport MessageStore from \"../../Stores/MessageStore\";\r\nimport OptionStore from \"../../Stores/OptionStore\";\r\nimport SupergroupStore from \"../../Stores/SupergroupStore\";\r\nimport UserStore from \"../../Stores/UserStore\";\r\nimport TdLibController from \"../../Controllers/TdLibController\";\r\nimport \"./MoreListItem.css\";\r\nimport \"./ChatDetails.css\";\r\n\r\nclass ChatDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listRef = React.createRef();\r\n    this.dividerRef = React.createRef();\r\n    this.mediaRef = React.createRef();\r\n\r\n    const { chatId } = this.props;\r\n\r\n    this.members = new Map();\r\n    this.state = {\r\n      prevChatId: chatId,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.chatId !== state.prevChatId) {\r\n      return {\r\n        prevChatId: props.chatId,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    const { chatId } = this.props;\r\n\r\n    const { current: list } = this.listRef;\r\n    const { scrollTop, scrollHeight, offsetHeight } = list;\r\n    const snapshot = {\r\n      scrollTop,\r\n      scrollHeight,\r\n      offsetHeight,\r\n    };\r\n\r\n    // console.log(\r\n    //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n    // );\r\n\r\n    return snapshot;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n    if (nextProps.chatId !== chatId) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.counters !== counters) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.migratedCounters !== migratedCounters) {\r\n      return true;\r\n    }\r\n\r\n    if (nextProps.theme !== theme) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { chatId } = this.props;\r\n    if (prevProps.chatId !== chatId) {\r\n      this.loadContent();\r\n    }\r\n\r\n    const { current: list } = this.listRef;\r\n    const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n    if (prevProps.chatId === chatId) {\r\n      list.scrollTop = scrollTop;\r\n    } else {\r\n      list.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadContent();\r\n\r\n    UserStore.on(\"updateUserStatus\", this.onUpdateUserStatus);\r\n    UserStore.on(\"updateUserFullInfo\", this.onUpdateUserFullInfo);\r\n    BasicGroupStore.on(\r\n      \"updateBasicGroupFullInfo\",\r\n      this.onUpdateBasicGroupFullInfo\r\n    );\r\n    SupergroupStore.on(\r\n      \"updateSupergroupFullInfo\",\r\n      this.onUpdateSupergroupFullInfo\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    UserStore.off(\"updateUserStatus\", this.onUpdateUserStatus);\r\n    UserStore.off(\"updateUserFullInfo\", this.onUpdateUserFullInfo);\r\n    BasicGroupStore.off(\r\n      \"updateBasicGroupFullInfo\",\r\n      this.onUpdateBasicGroupFullInfo\r\n    );\r\n    SupergroupStore.off(\r\n      \"updateSupergroupFullInfo\",\r\n      this.onUpdateSupergroupFullInfo\r\n    );\r\n  }\r\n\r\n  onUpdateBasicGroupFullInfo = (update) => {\r\n    const chat = ChatStore.get(this.props.chatId);\r\n    if (!chat) return;\r\n\r\n    if (\r\n      chat.type &&\r\n      chat.type[\"@type\"] === \"chatTypeBasicGroup\" &&\r\n      chat.type.basic_group_id === update.basic_group_id\r\n    ) {\r\n      this.forceUpdate(); // update bio\r\n    }\r\n  };\r\n\r\n  onUpdateSupergroupFullInfo = (update) => {\r\n    const chat = ChatStore.get(this.props.chatId);\r\n    if (!chat) return;\r\n\r\n    if (\r\n      chat.type &&\r\n      chat.type[\"@type\"] === \"chatTypeSupergroup\" &&\r\n      chat.type.supergroup_id === update.supergroup_id\r\n    ) {\r\n      this.forceUpdate(); // update bio\r\n    }\r\n  };\r\n\r\n  onUpdateUserFullInfo = (update) => {\r\n    const chat = ChatStore.get(this.props.chatId);\r\n    if (!chat) return;\r\n\r\n    if (\r\n      chat.type &&\r\n      (chat.type[\"@type\"] === \"chatTypePrivate\" ||\r\n        chat.type[\"@type\"] === \"chatTypeSecret\") &&\r\n      chat.type.user_id === update.user_id\r\n    ) {\r\n      this.forceUpdate(); // update bio\r\n    }\r\n  };\r\n\r\n  onUpdateUserStatus = (update) => {\r\n    if (this.members.has(update.user_id)) {\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  loadContent = () => {\r\n    this.loadChatContents();\r\n  };\r\n\r\n  loadChatContents = () => {\r\n    const { chatId, popup } = this.props;\r\n\r\n    const store = FileStore.getStore();\r\n\r\n    loadChatsContent(store, [chatId]);\r\n    const members = getGroupChatMembers(chatId).map((x) => x.user_id);\r\n    loadUsersContent(store, members);\r\n\r\n    if (popup) {\r\n      getChatFullInfo(chatId);\r\n    }\r\n  };\r\n\r\n  handleUsernameHint = () => {\r\n    const { t, chatId } = this.props;\r\n    const username = getChatUsername(chatId);\r\n    if (!username) return;\r\n\r\n    const telegramUrlOption = OptionStore.get(\"t_me_url\");\r\n    const usernameLink = telegramUrlOption\r\n      ? telegramUrlOption.value\r\n      : \"https://telegram.org/\";\r\n\r\n    copy(usernameLink + username);\r\n\r\n    this.handleScheduledAction(t(\"LinkCopied\"));\r\n  };\r\n\r\n  handleIdHint = (id) => {\r\n    const { t, chatId } = this.props;\r\n    if (!id) return;\r\n\r\n    copy(id);\r\n\r\n    this.handleScheduledAction(t(\"Id copied to clipboard\"));\r\n  };\r\n\r\n  handleScheduledAction = (message) => {\r\n    const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n    const snackKey = enqueueSnackbar(message, {\r\n      autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n      preventDuplicate: true,\r\n      action: [\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className=\"notification-close-button\"\r\n          onClick={() => {\r\n            closeSnackbar(snackKey);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>,\r\n      ],\r\n    });\r\n  };\r\n\r\n  handlePhoneHint = () => {\r\n    const { t, chatId } = this.props;\r\n    const phoneNumber = getChatPhoneNumber(chatId);\r\n    if (!phoneNumber) return;\r\n\r\n    copy(formatPhoneNumber(phoneNumber));\r\n\r\n    this.handleScheduledAction(t(\"PhoneCopied\"));\r\n  };\r\n\r\n  handleHeaderClick = () => {\r\n    this.listRef.current.scrollTop = 0;\r\n  };\r\n\r\n  handleOpenViewer = () => {\r\n    const { chatId, popup } = this.props;\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) return;\r\n    if (!chat.photo) return;\r\n\r\n    setProfileMediaViewerContent({ chatId });\r\n\r\n    if (popup) {\r\n      TdLibController.clientUpdate({\r\n        \"@type\": \"clientUpdateDialogChatId\",\r\n        chatId: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOpenChat = () => {\r\n    const { chatId, popup } = this.props;\r\n\r\n    openChat(chatId, null, false);\r\n\r\n    if (popup) {\r\n      TdLibController.clientUpdate({\r\n        \"@type\": \"clientUpdateDialogChatId\",\r\n        chatId: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOpenUser = (userId) => {\r\n    openUser(userId, true);\r\n  };\r\n\r\n  getContentHeight = () => {\r\n    if (!this.listRef) return 0;\r\n\r\n    return this.listRef.current.clientHeight;\r\n  };\r\n\r\n  handleTabClick = (event) => {\r\n    const { current: list } = this.listRef;\r\n    if (!list) return;\r\n\r\n    const { current: divider } = this.dividerRef;\r\n    if (!divider) return;\r\n    if (divider.offsetTop === list.scrollTop) return;\r\n\r\n    if (list.scrollTop < divider.offsetTop) {\r\n      list.scrollTo({\r\n        top: divider.offsetTop,\r\n        behavior: \"smooth\",\r\n      });\r\n    } else {\r\n      list.scrollTop = divider.offsetTop + 70;\r\n      setTimeout(() => {\r\n        list.scrollTo({\r\n          top: divider.offsetTop,\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 0);\r\n    }\r\n    // requestAnimationFrame(() => {\r\n    //     list.scrollTo({\r\n    //         top: divider.offsetTop,\r\n    //         behavior: 'smooth'\r\n    //     });\r\n    // });\r\n  };\r\n\r\n  handleScroll = (event) => {\r\n    if (!this.listRef) return;\r\n    if (!this.mediaRef) return;\r\n\r\n    const { current: list } = this.listRef;\r\n    if (!list) return;\r\n\r\n    const { current: media } = this.mediaRef;\r\n    if (!media) return;\r\n\r\n    if (\r\n      list.scrollTop + list.offsetHeight >=\r\n      list.scrollHeight - SCROLL_PRECISION\r\n    ) {\r\n      media.handleScroll(event);\r\n    }\r\n\r\n    media.handleVirtScroll(event, list);\r\n  };\r\n\r\n  render() {\r\n    const { backButton, className, chatId, onClose, popup, t } = this.props;\r\n\r\n    let { counters, migratedCounters } = this.props;\r\n    counters = counters || [0, 0, 0, 0, 0, 0];\r\n    migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n    const [\r\n      photoCount,\r\n      videoCount,\r\n      documentCount,\r\n      audioCount,\r\n      urlCount,\r\n      voiceAndVideoNoteCount,\r\n    ] = counters.map((el, i) => el + migratedCounters[i]);\r\n\r\n    const chat = ChatStore.get(chatId);\r\n    if (!chat) {\r\n      return (\r\n        <div className=\"chat-details\">\r\n          <ChatDetailsHeader onClose={onClose} />\r\n          <div\r\n            ref={this.listRef}\r\n            className={classNames(\"chat-details-list\", \"scrollbars-hidden\")}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let groupInCommonCount = 0;\r\n    if (isPrivateChat(chatId)) {\r\n      const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n      groupInCommonCount = fullInfo\r\n        ? fullInfo.group_in_common_count\r\n        : groupInCommonCount;\r\n    }\r\n\r\n    const username = getChatUsername(chatId);\r\n    const userId = getChatUserId(chatId);\r\n    const superGroupId = `-100${getSupergroupId(chatId)}`;\r\n    const basicGroupId = getBasicGroupId(chatId);\r\n    const channelId = getChannelId(chatId);\r\n    const phoneNumber = getChatPhoneNumber(chatId);\r\n    let bio = getChatBio(chatId);\r\n    let id = 0;\r\n    const isGroup = isGroupChat(chatId);\r\n    const isMe = isMeChat(chatId);\r\n\r\n    const members = getGroupChatMembers(chatId);\r\n    const users = [];\r\n    this.members = new Map();\r\n    members.forEach((member) => {\r\n      const user = UserStore.get(member.user_id);\r\n      if (user) {\r\n        this.members.set(user.id, user.id);\r\n        users.push(user);\r\n      }\r\n    });\r\n\r\n    if (isGroupChat(chatId))\r\n      id = superGroupId != -1000 ? superGroupId : basicGroupId;\r\n    else if (isPrivateChat(chatId)) id = userId;\r\n    else if(isChannelChat(chatId)) {console.log('canal'); id = channelId};\r\n\r\n    const sortedUsers = users.sort((x, y) => {\r\n      return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n    });\r\n    const items = sortedUsers.map((user) => (\r\n      <ListItem button className=\"list-item\" key={user.id}>\r\n        <User userId={user.id} onSelect={this.handleOpenUser} />\r\n      </ListItem>\r\n    ));\r\n\r\n    const { photo } = chat;\r\n\r\n    if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n      const {\r\n        text: bioText,\r\n        entities: bioEntities,\r\n      } = getUrlMentionHashtagEntities(bio, []);\r\n      if (bioEntities.length > 0) {\r\n        bio = getFormattedText({\r\n          \"@type\": \"formattedText\",\r\n          text: bioText,\r\n          entities: bioEntities,\r\n        });\r\n      }\r\n    }\r\n\r\n    let openChatTitle = t(\"SendMessage\");\r\n    if (isChannelChat(chatId)) {\r\n      openChatTitle = t(\"OpenChannel\");\r\n    } else if (isGroupChat(chatId)) {\r\n      openChatTitle = t(\"OpenGroup\");\r\n    }\r\n\r\n    let chatUrl = \"\";\r\n    if (username) {\r\n      if (isPrivateChat(chatId)) {\r\n        chatUrl = username;\r\n      } else {\r\n        const tMeUrl = OptionStore.get(\"t_me_url\")\r\n          .value.toLowerCase()\r\n          .replace(\"https://\", \"\")\r\n          .replace(\"http://\", \"\");\r\n\r\n        chatUrl = tMeUrl + username;\r\n      }\r\n    }\r\n\r\n    const content = (\r\n      <>\r\n        <ChatDetailsHeader\r\n          chatId={chatId}\r\n          backButton={backButton}\r\n          onClose={onClose}\r\n          onClick={this.handleHeaderClick}\r\n        />\r\n        <div\r\n          ref={this.listRef}\r\n          className={classNames(\"chat-details-list\", \"scrollbars-hidden\")}\r\n          onScroll={this.handleScroll}\r\n        >\r\n          <div className=\"chat-details-info\">\r\n            <Chat\r\n              chatId={chatId}\r\n              big={true}\r\n              showStatus={true}\r\n              showSavedMessages={!popup}\r\n              onTileSelect={photo ? this.handleOpenViewer : null}\r\n            />\r\n            {!isMe && (\r\n              <List className=\"chat-details-items\">\r\n                {bio && (\r\n                  <ListItem\r\n                    className=\"list-item-rounded\"\r\n                    alignItems=\"flex-start\"\r\n                  >\r\n                    <ListItemIcon>\r\n                      <ErrorOutlineIcon className=\"chat-details-info-icon\" />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={bio}\r\n                      secondary={\r\n                        isPrivateChat(chatId)\r\n                          ? t(\"Bio\")\r\n                          : t(\"DescriptionPlaceholder\")\r\n                      }\r\n                      style={{ whiteSpace: \"pre-wrap\", wordWrap: \"break-word\" }}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {username && (\r\n                  <ListItem\r\n                    button\r\n                    className=\"list-item-rounded\"\r\n                    alignItems=\"flex-start\"\r\n                    onClick={this.handleUsernameHint}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <AlternateEmailIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"inherit\" noWrap>\r\n                          {chatUrl}\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        isPrivateChat(chatId) ? t(\"Username\") : t(\"InviteLink\")\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {id && (\r\n                  <ListItem\r\n                    button\r\n                    className=\"list-item-rounded\"\r\n                    alignItems=\"flex-start\"\r\n                    onClick={() => this.handleIdHint(id)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Fingerprint />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"inherit\" noWrap>\r\n                          {id}\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        t(\"Id\")\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                {isPrivateChat(chatId) && (\r\n                  <ListItem\r\n                    button\r\n                    className=\"list-item-rounded\"\r\n                    alignItems=\"flex-start\"\r\n                    onClick={this.handlePhoneHint}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <CallIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"inherit\" noWrap>\r\n                          {phoneNumber\r\n                            ? formatPhoneNumber(phoneNumber)\r\n                            : t(\"PhoneHidden\")}\r\n                        </Typography>\r\n                      }\r\n                      secondary={t(\"Phone\")}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n                <NotificationsListItem chatId={chatId} />\r\n                {popup && (\r\n                  <ListItem\r\n                    button\r\n                    className=\"list-item-rounded\"\r\n                    alignItems=\"flex-start\"\r\n                    onClick={this.handleOpenChat}\r\n                  >\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography color=\"primary\" variant=\"inherit\" noWrap>\r\n                          {openChatTitle.toUpperCase()}\r\n                        </Typography>\r\n                      }\r\n                      style={{ paddingLeft: 40 }}\r\n                    />\r\n                  </ListItem>\r\n                )}\r\n              </List>\r\n            )}\r\n          </div>\r\n\r\n          <div ref={this.dividerRef} />\r\n          <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick} />\r\n          <SharedMediaContent\r\n            ref={this.mediaRef}\r\n            chatId={chatId}\r\n            popup={popup}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    return popup ? (\r\n      <>{content}</>\r\n    ) : (\r\n      <div className={classNames(\"chat-details\", className)}>{content}</div>\r\n    );\r\n  }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n  chatId: PropTypes.number,\r\n  popup: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  onOpenGroupInCommon: PropTypes.func,\r\n  onOpenSharedDocuments: PropTypes.func,\r\n  onOpenSharedMedia: PropTypes.func,\r\n  onOpenSharedLinks: PropTypes.func,\r\n  onOpenSharedPhotos: PropTypes.func,\r\n  onOpenSharedVideos: PropTypes.func,\r\n  onOpenSharedVoiceNotes: PropTypes.func,\r\n};\r\n\r\nconst enhance = compose(\r\n  withSaveRef(),\r\n  withTranslation(),\r\n  withSnackbar,\r\n  withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender } = last_message;\r\n        if (sender.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\r\n    }\r\n\r\n    onUpdateMessageSendAcknowledged = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.setState({ sendingState: null });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem>\r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === 0) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n\r\nexport function scrollBottom(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\r\n\r\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport {\r\n    STORAGE_CACHE_KEY,\r\n    STORAGE_CACHE_TEST_KEY,\r\n    STORAGE_CONTACTS_KEY,\r\n    STORAGE_CONTACTS_TEST_KEY,\r\n    STORAGE_FILES_KEY,\r\n    STORAGE_FILES_TEST_KEY,\r\n    STORAGE_FILTERS_KEY,\r\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\r\n} from '../Constants';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        const { useTestDC } = TdLibController.parameters;\r\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\r\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\r\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\r\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\r\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000, {\r\n            leading: false,\r\n            trailing: true\r\n        });\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove(this.cacheKey);\r\n                        CacheManager.remove(this.filesKey);\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove(this.contactsKey);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        const promises = [];\r\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n        // console.log('[f] cache.load', files);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[f] cache.parse', cache.files);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender } = last_message;\r\n                switch (sender['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        // console.log('[cm] save');\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal');\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save(this.cacheKey, cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        const results = await Promise.all(promises);\r\n        await CacheManager.save(this.filesKey, results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save(this.contactsKey, contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save(this.filtersKey, this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\r\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\r\n\r\n        Promise.all(promises);\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport { openSupportChat } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n\r\n        openSupportChat();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div className='search-input-wrapper'>\r\n                    {showIcon && <SearchIcon className='search-input-icon' />}\r\n                    <div\r\n                        id='search-inputbox'\r\n                        ref={inputRef}\r\n                        placeholder={hint || t('Search')}\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onKeyUp={this.handleKeyUp}\r\n                        onPaste={this.handlePaste}\r\n                        onInput={this.handleInput}\r\n                        onFocus={onFocus}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        if (this.stub) return;\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const list = current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source, stub = false) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        if (stub) {\r\n            return <DialogPlaceholder key={index} index={index} />\r\n        }\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        this.source = [];\r\n        this.stub = false;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                this.source = Array.from(Array(10));\r\n                this.stub = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    cacheItems: PropTypes.array,\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender.user_id && chatSearch ? (\r\n                <UserTile userId={sender.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\r\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\r\n\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender.user_id) {\r\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender } = message;\r\n                if (sender && sender.user_id) {\r\n                    users.set(sender.user_id, sender.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender.user_id) {\r\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current.cropper;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\nimport { scrollBottom } from '../../../Utils/DOM';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_chat_id: 0,\r\n            offset_order: '9223372036854775807',\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\r\n        try {\r\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\r\n            type = themeOptions.type;\r\n            primary = themeOptions.primary;\r\n        } catch {}\r\n\r\n        this.state = {\r\n            open: false,\r\n            type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        const type = event.target.value;\r\n\r\n        this.setState({ type });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                disableEnforceFocus={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport { isMacOS } from '../../../Utils/Common';\r\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false,\r\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    async handleSetOption(command) {\r\n        let value = false;\r\n        switch (command) {\r\n            case 'sendByCtrlEnter': {\r\n                value = true;\r\n                break;\r\n            }\r\n            case 'sendByEnter': {\r\n                value = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: SEND_BY_CTRL_ENTER_KEY,\r\n            value: { '@type': 'optionValueBoolean', value }\r\n        });\r\n\r\n        this.setState({\r\n            sendByCtrlEnter: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Theme')} />\r\n                        </ListItem>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={!sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('SendByEnter')}\r\n                                secondary={t('NewLineByShiftEnter')}\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\r\n                            <Radio\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={sendByCtrlEnter}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\r\n                                secondary={t('NewLineByEnter')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport SectionHeader from '../SectionHeader';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacyCalls.css';\r\n\r\nclass PrivacyCalls extends React.Component {\r\n    state = {\r\n        prevAllowCalls: null,\r\n        prevAllowP2PCalls: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { allowCalls, allowP2PCalls } = props;\r\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\r\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\r\n            const allowCallsValue = allowCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n\r\n            return {\r\n                prevAllowCalls: allowCalls,\r\n                prevAllowP2PCalls: allowP2PCalls,\r\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\r\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setSettings();\r\n    }\r\n\r\n    setSettings() {\r\n        const { allowCalls, allowP2PCalls } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\r\n                rules\r\n            });\r\n        }\r\n\r\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\r\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\r\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\r\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\r\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\r\n            let added = false;\r\n            const rules = {\r\n                '@type': 'userPrivacySettingRules',\r\n                rules: allowP2PCalls.rules.map(x => {\r\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\r\n                        added = true;\r\n                        return { '@type': allowP2PCallsValue }\r\n                    } else {\r\n                        return x;\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (!added) {\r\n                rules.rules.push({ '@type': allowP2PCallsValue });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'setUserPrivacySettingRules',\r\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\r\n                rules\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeAllowCalls = event => {\r\n        this.setState({\r\n            allowCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    handleChangeAllowP2PCalls = event => {\r\n        this.setState({\r\n            allowP2PCallsValue: event.currentTarget.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, t } = this.props;\r\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Calls')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n\r\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\r\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\r\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\r\n                        </RadioGroup>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacyCalls.propTypes = {\r\n    allowCalls: PropTypes.object.isRequired,\r\n    allowP2PCalls: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withTranslation()(PrivacyCalls);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\nimport PrivacyCalls from './PrivacyCalls';\r\nimport { CallOutlined } from '@material-ui/icons';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        openActiveSessions: false,\r\n\r\n        users: null,\r\n        openBlockedUsers: false,\r\n\r\n        allowCalls: null,\r\n        allowP2PCalls: null,\r\n        openCalls: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\r\n        }).catch(() => null));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getUserPrivacySettingRules',\r\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\r\n        }).catch(() => null));\r\n\r\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\r\n\r\n        this.setState({\r\n            sessions,\r\n            users,\r\n            allowCalls,\r\n            allowP2PCalls\r\n        });\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    openCalls = () => {\r\n        const { allowCalls, allowP2PCalls } = this.state;\r\n        if (!allowCalls || !allowP2PCalls) return;\r\n\r\n        this.setState({\r\n            openCalls: true\r\n        });\r\n    };\r\n\r\n    closeCalls = () => {\r\n        this.setState({\r\n            openCalls: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const {\r\n            openBlockedUsers, users,\r\n            openActiveSessions, sessions,\r\n            openCalls, allowCalls, allowP2PCalls\r\n        } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openCalls}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                className='settings-list-item-text'\r\n                                primary={t('Calls')}\r\n                                secondary={''}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\r\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile || defaultPhoto) {\r\n            const photo = defaultPhotoFile\r\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputChatPhotoStatic', photo }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\nimport { scrollBottom } from '../../Utils/DOM';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        scrollBottom(wrapPanel, 'auto');\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                scrollBottom(wrapPanel, 'smooth');\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile || defaultPhoto) {\r\n                const photo = defaultPhotoFile\r\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\r\n\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\r\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        {/*<UpdatePanel />*/}\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n    };\r\n\r\n    onClientUpdateSendText = update => {\r\n        const { text } = update;\r\n\r\n        if (!text) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = text;\r\n        focusInput(element);\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const { chatSelectOptions } = AppStore;\r\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\r\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\r\n            return;\r\n        }\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\r\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter+cmd, enter+ctrl\r\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                } else {\r\n                    // enter+cmd, enter+ctrl, enter+shift\r\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                        document.execCommand('insertLineBreak');\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                    // enter\r\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                        this.handleSubmit(false);\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n\r\n        FileStore.setBlob(file.id, blob);\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    async editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        return TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n\r\n        // const { text, position } = this.getTextAndCaretPosition();\r\n        // this.searchUsernameOrHashtag(text, position, [], false);\r\n    };\r\n\r\n    getTextAndCaretPosition = () => {\r\n        const { current: input } = this.newMessageRef;\r\n        if (!input) return;\r\n\r\n        input.focus()\r\n        let _range = document.getSelection().getRangeAt(0);\r\n        let range = _range.cloneRange();\r\n        range.selectNodeContents(input);\r\n        range.setEnd(_range.endContainer, _range.endOffset);\r\n\r\n        return { text: input.innerText, position: range.toString().length };\r\n    };\r\n\r\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\r\n        const { chatId } = this.state;\r\n\r\n        const searchResultUsernames = [];\r\n\r\n        if (this.cancelDelayRunnable) {\r\n            clearTimeout(this.cancelDelayRunnable);\r\n            this.cancelDelayRunnable = null;\r\n        }\r\n\r\n        const info = getChatFullInfo(chatId);\r\n        const needUsernames = true;\r\n        const needBotContext = true;\r\n\r\n        const now = Date.now();\r\n        this.now = now;\r\n\r\n        let searchPosition = position;\r\n        if (text.length > 0) {\r\n            searchPosition--;\r\n        }\r\n\r\n        this.lastText = text;\r\n        this.lastUsernameOnly = usernameOnly;\r\n\r\n        let foundType = -1;\r\n        let result = '';\r\n        let resultStartPosition;\r\n        let resultLength;\r\n\r\n        let dogPosition = -1;\r\n        if (usernameOnly) {\r\n            result += text.substring(1);\r\n            resultStartPosition = 0;\r\n            resultLength = result.length;\r\n            foundType = 0;\r\n        } else {\r\n            for (let i = searchPosition; i >= 0; i--) {\r\n                if (i >= text.length){\r\n                    continue;\r\n                }\r\n                let ch = text[i];\r\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\r\n                    if (ch === '@') {\r\n                        if (needUsernames || needBotContext && i === 0){\r\n                            if (!info && i !== 0) {\r\n                                this.lastText = text;\r\n                                this.lastPosition = position;\r\n                                this.messages = messages;\r\n                                this.closeHints(now);\r\n                                return;\r\n                            }\r\n                            dogPosition = i;\r\n                            foundType = 0;\r\n                            resultStartPosition = i;\r\n                            resultLength = result.length + 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = ch + result;\r\n            }\r\n        }\r\n\r\n        if (foundType === -1) {\r\n            this.closeHints(now);\r\n            return;\r\n        }\r\n\r\n        if (foundType === 0) {\r\n            const users = [];\r\n            const usersMap = new Map();\r\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\r\n                const { sender } = messages[i];\r\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\r\n                    usersMap.set(sender.user_id, sender.user_id);\r\n                    users.push(sender.user_id);\r\n                }\r\n            }\r\n\r\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\r\n            const hasSpace = usernameString.indexOf(' ') >= 0;\r\n            const newResult = [];\r\n            const newResultsMap = new Map();\r\n            const newMap = new Map();\r\n\r\n            const inlineBots = [];\r\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\r\n\r\n            }\r\n\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && info && info.members) {\r\n                for (let i = -1; i < info.members.length; i++) {\r\n                    let username;\r\n                    let firstName;\r\n                    let lastName;\r\n                    let object;\r\n                    let id;\r\n                    if (i === -1) {\r\n                        if (!usernameString.length) {\r\n                            newResult.push(chat);\r\n                            continue;\r\n                        }\r\n                        firstName = chat.title;\r\n                        lastName = '';\r\n                        username = chat.username;\r\n                        object = chat;\r\n                        id = -chat.id;\r\n                    } else {\r\n                        const { user_id } = info.members[i];\r\n                        const user = UserStore.get(user_id);\r\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\r\n                            continue;\r\n                        }\r\n                        if (!usernameString.length) {\r\n                            if (!isDeletedUser(user_id)) {\r\n                                newResult.push(user);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        firstName = user.first_name;\r\n                        lastName = user.last_name;\r\n                        username = user.username;\r\n                        object = user;\r\n                        id = user.id;\r\n                    }\r\n\r\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\r\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\r\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\r\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\r\n                        newResult.push(object);\r\n                        newMap.set(id, object);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isSupergroup(chatId) && usernameString.length > 0) {\r\n                if (newResult.length < 5) {\r\n                    this.cancelDelayRunnable = setTimeout(() => {\r\n                        this.cancelDelayRunnable = null;\r\n                        this.showUsersResult(now, newResult, newMap, true);\r\n                    }, 0);\r\n                } else {\r\n                    this.showUsersResult(now, newResult, newMap, true);\r\n                }\r\n\r\n                setTimeout(async () => {\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'searchChatMembers',\r\n                        chat_id: chatId,\r\n                        query: usernameString,\r\n                        limit: 20,\r\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\r\n                    });\r\n\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const { members } = result;\r\n                    if (members.length > 0) {\r\n                        for (let i = 0; i < members.length; i++) {\r\n                            const { user_id } = members[i];\r\n                            if (isMeUser(user_id)) {\r\n                                continue;\r\n                            }\r\n                            const user = UserStore.get(user_id);\r\n                            if (!user) {\r\n                                continue;\r\n                            }\r\n\r\n                            searchResultUsernames.push(user);\r\n                        }\r\n\r\n                        this.notifyDataSetChanged(now, searchResultUsernames);\r\n                    }\r\n\r\n\r\n                }, 200);\r\n            } else {\r\n                this.showUsersResult(now, newResult, newMap, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    notifyDataSetChanged(id, searchResultUsernames) {\r\n        console.log('[search] global', searchResultUsernames);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsGlobal',\r\n            id,\r\n            global: searchResultUsernames\r\n        });\r\n    }\r\n\r\n    showUsersResult(id, newResult, newMap, notify) {\r\n        console.log('[search] local', newResult);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsLocal',\r\n            id,\r\n            local: newResult\r\n        });\r\n    }\r\n\r\n    closeHints(id) {\r\n        console.log('[search] close');\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsClose',\r\n            id\r\n        });\r\n    }\r\n\r\n    openHints() {\r\n\r\n    }\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = async (caption, content) => {\r\n        if (content) {\r\n            const message = await this.editMessageMedia(content);\r\n            if (message) {\r\n                const { content: editContent } = message;\r\n                switch (editContent['@type']) {\r\n                    case 'messagePhoto': {\r\n                        const { photo: sendPhoto } = content;\r\n                        if (!sendPhoto) break;\r\n\r\n                        const { data: blob } = sendPhoto;\r\n                        if (!blob) break;\r\n\r\n                        const { photo } = editContent;\r\n                        if (!photo) break;\r\n\r\n                        const iSize = photo.sizes.find(x => x.type === 'i');\r\n                        if (!iSize) break;\r\n\r\n                        const { photo: file } = iSize;\r\n                        if (file) {\r\n                            FileStore.setBlob(file.id, blob);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                            {command}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport const MAX_SPEED = 8.2;\r\nexport const MIN_SPEED = 0.8;\r\nexport const AMPLITUDE_SPEED = 0.33;\r\n\r\nexport const SCALE_BIG = 0.807;\r\nexport const SCALE_SMALL = 0.704;\r\n\r\nexport const SCALE_BIG_MIN = 0.878;\r\nexport const SCALE_SMALL_MIN = 0.926;\r\n\r\nexport const FORM_BIG_MAX = 0.6;\r\nexport const FORM_SMALL_MAX = 0.6;\r\n\r\nexport const GLOBAL_SCALE = 1;\r\n\r\nexport const FORM_BUTTON_MAX = 0;\r\n\r\nexport const GRADIENT_SPEED_MIN = 0.5;\r\nexport const GRADIENT_SPEED_MAX = 0.01;\r\n\r\nexport const LIGHT_GRADIENT_SIZE = 0.5;\r\n\r\nfunction rotateZ(x, y, angle, originX, originY) {\r\n    x -= originX;\r\n    y -= originY;\r\n\r\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\r\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\r\n\r\n    x = X + originX;\r\n    y = Y + originY;\r\n\r\n    return [x, y];\r\n}\r\n\r\nexport default class BlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.cubicBezierK = 1.0;\r\n        this.N = n;\r\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\r\n        this.radius = new Array(n);\r\n        this.angle = new Array(n);\r\n\r\n        this.radiusNext = new Array(n);\r\n        this.angleNext = new Array(n);\r\n        this.progress = new Array(n);\r\n        this.speed = new Array(n);\r\n\r\n        this.pointStart = new Array(4);\r\n        this.pointEnd = new Array(4);\r\n\r\n        for (let i = 0; i < this.N; i++) {\r\n            this.generateBlob(this.radius, this.angle, i);\r\n            this.generateBlob(this.radiusNext, this.angleNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, angle, i) {\r\n        const { maxRadius, minRadius, speed, N } = this;\r\n\r\n        const angleDif = 2 * Math.PI / N * 0.05;\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                angle[i] = angleNext[i];\r\n                this.generateBlob(radiusNext, angleNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(cX, cY, canvas, paint) {\r\n        // console.log('[bd] draw', cX, cY, canvas, paint);\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n\r\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\r\n\r\n            for (let i = 0; i < N; i++) {\r\n                const progress = this.progress[i];\r\n                const nextIndex = i + 1 < N ? i + 1 : 0;\r\n                const progressNext = this.progress[nextIndex];\r\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\r\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\r\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\r\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\r\n\r\n                pointStart[0] = cX;\r\n                pointStart[1] = cY - r1;\r\n                pointStart[2] = cX + l;\r\n                pointStart[3] = cY - r1;\r\n\r\n                this.mapPoints(pointStart, cX, cY, angle1);\r\n\r\n                pointEnd[0] = cX;\r\n                pointEnd[1] = cY - r2;\r\n                pointEnd[2] = cX - l;\r\n                pointEnd[3] = cY - r2;\r\n\r\n                this.mapPoints(pointEnd, cX, cY, angle2);\r\n\r\n                if (i === 0) {\r\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\r\n                    ctx.moveTo(pointStart[0], pointStart[1]);\r\n                }\r\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\r\n                ctx.bezierCurveTo(\r\n                    pointStart[2], pointStart[3],\r\n                    pointEnd[2], pointEnd[3],\r\n                    pointEnd[0], pointEnd[1]\r\n                );\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            // this.fillStyleFunc(ctx);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    mapPoints(points, cX, cY, angle) {\r\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\r\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\r\n\r\n        points[0] = result1[0];\r\n        points[1] = result1[1];\r\n        points[2] = result2[0];\r\n        points[3] = result2[1];\r\n    }\r\n\r\n    generateInitBlob() {\r\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\r\n\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, angle, i);\r\n            this.generateBlob(radiusNext, angleNext, i);\r\n            progress[i] = 0;\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// const MIN_SPEED = 0.8;\r\n// const MAX_SPEED = 8.2;\r\n\r\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\r\n\r\nexport default class LineBlobDrawable {\r\n    constructor(n) {\r\n        this.maxRadius = 10;\r\n        this.minRadius = 0;\r\n\r\n        this.N = n;\r\n        this.radius = new Array(n + 1);\r\n\r\n        this.radiusNext = new Array(n + 1);\r\n        this.progress = new Array(n + 1);\r\n        this.speed = new Array(n + 1);\r\n\r\n        for (let i = 0; i <= n; i++) {\r\n            this.generateBlob(this.radius, i);\r\n            this.generateBlob(this.radiusNext, i);\r\n            this.progress[i] = 0;\r\n        }\r\n    }\r\n\r\n    generateBlob(radius, i) {\r\n        const { maxRadius, minRadius, speed } = this;\r\n\r\n        const radDif = maxRadius - minRadius;\r\n        radius[i] = minRadius + Math.random() * radDif;\r\n        speed[i] = 0.017 + 0.003 * Math.random();\r\n    }\r\n\r\n    generateNextBlob() {\r\n        const { radius, radiusNext, progress, N } = this;\r\n        for (let i = 0; i < N; i++) {\r\n            this.generateBlob(radius, i);\r\n            this.generateBlob(radiusNext, i);\r\n            progress[i] = 0.0;\r\n        }\r\n    }\r\n\r\n    update(amplitude, speedScale) {\r\n        const { N, progress, speed, radius, radiusNext } = this;\r\n        for (let i = 0; i <= N; i++) {\r\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\r\n            if (progress[i] >= 1.0) {\r\n                progress[i] = 0.0;\r\n                radius[i] = radiusNext[i];\r\n                this.generateBlob(radiusNext, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\r\n        if (canvas.getContext) {\r\n            const ctx = canvas.getContext('2d');\r\n            // ctx.globalAlpha = 0.5;\r\n            // ctx.lineWidth = 1;\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(right, bottom);\r\n            ctx.lineTo(left, bottom);\r\n\r\n            const { radius, radiusNext, N } = this;\r\n            for (let i = 0; i <= N; i++) {\r\n                if (i === 0) {\r\n                    const progress = this.progress[i];\r\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\r\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.lineTo(left, y);\r\n                } else {\r\n                    const progress = this.progress[i - 1];\r\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\r\n                    const progressNext = this.progress[i];\r\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\r\n                    const x1 = (right - left) / N * (i - 1);\r\n                    const x2 = (right - left) / N * i;\r\n                    const cx = x1 + (x2 - x1) / 2;\r\n\r\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\r\n                    ctx.bezierCurveTo(\r\n                        cx, y1,\r\n                        cx, y2,\r\n                        x2, y2\r\n                    );\r\n                    if (i === N) {\r\n                        ctx.lineTo(right, bottom);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // ctx.scale(1.0, 1.0);\r\n            paint(ctx);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        }\r\n    }\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LineBlobDrawable from './LineBlobDrawable';\r\n\r\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\r\nexport const MUTE_BUTTON_STATE_MUTE = 1;\r\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\r\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\r\n\r\nexport class WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\r\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.6, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            gradient.addColorStop(0, '#00B1C0');\r\n            gradient.addColorStop(1, '#52CE5D');\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            gradient.addColorStop(0, '#2BCEFF');\r\n            gradient.addColorStop(1, '#0976E3');\r\n        } else {\r\n            gradient.addColorStop(0, '#8599aa');\r\n            gradient.addColorStop(1, '#8599aa');\r\n        }\r\n\r\n        return gradient;\r\n    }\r\n\r\n    update(height, width, dt, amplitude) {\r\n        // TODO: move gradient here\r\n    }\r\n}\r\n\r\nclass TopBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.resizing = false;\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n        this.amplitude2 = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.prevState = null;\r\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\r\n        this.progressToState = 1.0;\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.right = 1260 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        window.addEventListener('resize', this.handleResize);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n\r\n        this.canvas = document.getElementById('canvas');\r\n        this.lbd = new LineBlobDrawable(3);\r\n        this.lbd1 = new LineBlobDrawable(7);\r\n        this.lbd2 = new LineBlobDrawable(8);\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        window.removeEventListener('resize', this.handleResize);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 20 * this.scale;\r\n        this.bottom = 63 * this.scale;\r\n\r\n        const topBar = document.getElementById('top-bar');\r\n        if (!topBar) return;\r\n\r\n        this.right = topBar.offsetWidth * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleResize = () => {\r\n        if (this.resizeHandler) {\r\n            clearTimeout(this.resizeHandler);\r\n            this.resizeHandler = null;\r\n        }\r\n\r\n        this.resizing = true;\r\n        this.resizeCanvas();\r\n        this.resizeHandler = setTimeout(() => {\r\n            this.resizing = false;\r\n            this.invokeDraw();\r\n        }, 250);\r\n    }\r\n\r\n    resizeCanvas() {\r\n        const topBar = document.getElementById('top-bar');\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.right = topBar.offsetWidth * this.scale;\r\n\r\n        this.forceUpdate();\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\r\n        if (!focused && !resizing && this.progressToState >= 1.0) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude += this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.animateToAmplitude !== this.amplitude2) {\r\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\r\n            if (this.animateAmplitudeDiff2 > 0) {\r\n                if (this.amplitude2 > this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude2 < this.animateToAmplitude) {\r\n                    this.amplitude2 = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousState) {\r\n            this.progressToState += dt / 250;\r\n            if (this.progressToState > 1) {\r\n                this.progressToState = 1;\r\n                this.previousState = null;\r\n            }\r\n        }\r\n\r\n        const top1 = 6 * this.amplitude2 * scale;\r\n        const top2 = 6 * this.amplitude2 * scale;\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        lbd.minRadius = 0;\r\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\r\n        lbd1.minRadius = 0;\r\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n        lbd2.minRadius = 0;\r\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\r\n\r\n        lbd.update(this.amplitude, 0.3);\r\n        lbd1.update(this.amplitude, 0.7);\r\n        lbd2.update(this.amplitude, 0.7);\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            if (i === 0 && !previousState) {\r\n                continue;\r\n            }\r\n\r\n            let alpha = 1;\r\n            let state = null;\r\n            if (i === 0) {\r\n                alpha = 1 - this.progressToState;\r\n                state = previousState;\r\n                // previousState.setToPaint(paint);\r\n            } else {\r\n                alpha = previousState ? this.progressToState : 1;\r\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\r\n                state = currentState;\r\n                // currentState.setToPaint(paint);\r\n            }\r\n\r\n            const paint1 = ctx => {\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n            const paint = ctx => {\r\n                ctx.globalAlpha = i === 0? 1 : alpha;\r\n                state.shader(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\r\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\r\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\r\n    }\r\n\r\n    render() {\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return(\r\n            <div id='top-bar' className='top-bar'>\r\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTopBar.propTypes = {};\r\n\r\nexport default TopBar;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { openGroupCallPanel } from '../../Actions/Call';\r\nimport { showSnackbar } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallTopPanel.css';\r\n\r\nclass GroupCallTopPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.topBarRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { call, status, connected, animated } = this.state;\r\n\r\n        if (nextState.call !== call) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.status !== status) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.connected !== connected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.animated !== animated) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes, type } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        let max = 0;\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            max = value > max ? value : max;\r\n        }\r\n\r\n        if (type !== 'input') {\r\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\r\n        }\r\n    };\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        }, () => {\r\n            this.switchButtonState(true);\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.saveMessagesScrollPosition();\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.restoreMessagesScrollPosition(Boolean(call));\r\n            this.switchButtonState(true);\r\n        });\r\n    };\r\n\r\n    saveMessagesScrollPosition() {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const prevOffsetHeight = list.offsetHeight;\r\n            const prevScrollTop = list.scrollTop;\r\n\r\n            list.prevOffsetHeight = prevOffsetHeight;\r\n            list.prevScrollTop = prevScrollTop;\r\n        });\r\n    }\r\n\r\n    restoreMessagesScrollPosition(openPanel = true) {\r\n        const elements = document.getElementsByClassName('messages-list-wrapper');\r\n        if (!elements.length) return;\r\n\r\n        [...elements].forEach(x => {\r\n            const list = x;\r\n            if (!list) return;\r\n\r\n            const { prevScrollTop, prevOffsetHeight } = list;\r\n            if (list.scrollTop === prevScrollTop) {\r\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\r\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMicrophone = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call, status } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\r\n                return (\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='Close'\r\n                        color='inherit'\r\n                        className='notification-close-button'\r\n                        onClick={() => { closeSnackbar(snackKey); }}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )\r\n            });\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenGroupCall = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        openGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { call, status, connected, animated } = this.state;\r\n        if (!call) return null;\r\n\r\n        const { chatId } = call;\r\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\r\n\r\n        return (\r\n            <div className='group-call-top-panel-wrapper'>\r\n                { animated ? (\r\n                    <TopBar ref={this.topBarRef}/>\r\n                    ) : (\r\n                    <div className={classNames('group-call-top-panel',\r\n                        {\r\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\r\n                            'group-call-top-panel-connecting': !connected,\r\n\r\n                        })}\r\n                    />\r\n                )}\r\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\r\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\r\n                    </IconButton>\r\n                    <div className='group-call-top-panel-title'>\r\n                        {title}\r\n                    </div>\r\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\r\n                        <CallEndIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nGroupCallTopPanel.propTypes = {};\r\n\r\nexport default withTranslation()(GroupCallTopPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\r\n    'Block'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\r\n    'Phone'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\r\nimport BlockIcon from '../../Assets/Icons/Block';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport PhoneIcon from '../../Assets/Icons/Phone';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport {\r\n    canClearHistory,\r\n    canDeleteChat,\r\n    getViewInfoTitle,\r\n    isPrivateChat,\r\n    getDeleteChatTitle,\r\n    hasOnePinnedMessage,\r\n    canSwitchBlocked,\r\n    getChatSender,\r\n    canManageVoiceChats,\r\n    canBeReported, getChatUserId, canBeCalled\r\n} from '../../Utils/Chat';\r\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    handleButtonClick = async event => {\r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat);\r\n\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n    };\r\n\r\n    handleStartGroupCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        showAlert({\r\n            title: LStore.getString('StartVoipChatTitle'),\r\n            message: LStore.getString('StartVoipChatAlertText'),\r\n            ok: LStore.getString('Start'),\r\n            cancel: LStore.getString('Cancel'),\r\n            onResult: async result => {\r\n                if (result){\r\n                    await CallStore.startGroupCall(chatId);\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    handleStartP2PCall = () => {\r\n        this.handleMenuClose();\r\n\r\n        const userId = getChatUserId(AppStore.getChatId());\r\n\r\n        CallStore.p2pStartCall(userId, false);\r\n    };\r\n\r\n    handleReport = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openReportChat(chatId, []);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked, voice_chat_group_call_id } = chat;\r\n\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId);\r\n        const manageVoiceChats = canManageVoiceChats(chatId);\r\n        const reported = canBeReported(chatId);\r\n        const called = canBeCalled(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    { CallStore.p2pCallsEnabled && called && (\r\n                        <MenuItem onClick={this.handleStartP2PCall}>\r\n                            <ListItemIcon>\r\n                                <CallOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Call')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\r\n                        <MenuItem onClick={this.handleStartGroupCall}>\r\n                            <ListItemIcon>\r\n                                <PhoneIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('StartVoipChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem>\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                <BlockIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {reported && (\r\n                        <MenuItem onClick={this.handleReport}>\r\n                            <ListItemIcon>\r\n                                <ReportOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ReportChat')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown, animateOnMount } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown, animateOnMount);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown, animate = true) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = !animate ? '0ms' : '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height, getItemTemplate } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    getItemTemplate: PropTypes.func,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number,\r\n    animateOnMount: PropTypes.bool\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    getItemTemplate: x => x,\r\n    scrollDown: true,\r\n    height: 21,\r\n    animateOnMount: true\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport { canBeReported } from '../../Utils/Chat';\r\nimport { openReportChat } from '../../Actions/Chat';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    handleReport = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        clearSelection();\r\n        openReportChat(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const items = Array.from(MessageStore.selectedItems.values());\r\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canReport && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\r\n                        {t('ReportChat')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.state = {\r\n            chatId,\r\n            pinned,\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            connectionState: AppStore.getConnectionState()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.state;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    setPinnedState() {\r\n        const { chatId } = this.state;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({ pinned });\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const chatId = AppStore.getChatId();\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        this.setState({\r\n            chatId,\r\n            pinned\r\n        });\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const { chatId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handlePinClick = () => {\r\n        const { chatId } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            pinned,\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        <PinnedMessage chatId={chatId} />\r\n                        {chat && (\r\n                            <div className='header-right-buttons'>\r\n                                { pinned.length > 1 && (\r\n                                    <IconButton\r\n                                        aria-label='Pins'\r\n                                        onClick={this.handlePinClick}\r\n                                        onMouseDown={this.handleMouseDown}>\r\n                                        <PlaylistEditIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                                <IconButton\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarInviteMembers': {\r\n                break;\r\n            }\r\n        }\r\n        if (!content) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        const isCall = isCallMessage(chatId, messageId);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './GroupCallJoinPanelSubtitle.css';\r\n\r\nclass GroupCallJoinPanelSubtitle extends React.Component {\r\n    state = {\r\n        participantCount: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participantCount } = this.state;\r\n\r\n        if (nextState.participantCount !== participantCount) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            let participantCount = 0;\r\n            const groupCall = CallStore.get(groupCallId);\r\n            if (groupCall) {\r\n                const { participant_count } = groupCall;\r\n                participantCount = participant_count;\r\n            }\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participantCount\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== groupCallId) return;\r\n\r\n        let participantCount = 0;\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (groupCall) {\r\n            const { participant_count } = groupCall;\r\n            participantCount = participant_count;\r\n        }\r\n\r\n        this.setState({ participantCount });\r\n    };\r\n\r\n    render() {\r\n        const { t, participantsOnly } = this.props;\r\n        const { participantCount } = this.state;\r\n        // console.log('[call][GroupCallPanelSubtitle] render');\r\n\r\n        return (\r\n            <div className='group-call-join-panel-subtitle'>\r\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallJoinPanelSubtitle.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    participantsOnly: PropTypes.bool\r\n};\r\n\r\nGroupCallJoinPanelSubtitle.defaultProps = {\r\n    participantsOnly: false\r\n}\r\n\r\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallRecentParticipants.css';\r\n\r\nfunction speakersEquals(lhs, rhs) {\r\n    if (lhs.length !== rhs.length) return false;\r\n\r\n    for (let i = 0; i < lhs.length; i++) {\r\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\r\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nclass GroupCallRecentParticipants extends React.Component {\r\n    state = {\r\n        speakers: []\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { speakers } = this.state;\r\n\r\n        if (!speakersEquals(nextState.speakers, speakers)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { id } = props;\r\n        const { prevId } = state;\r\n\r\n        if (prevId !== id) {\r\n            let speakers = [];\r\n            const groupCall = CallStore.get(id);\r\n            if (groupCall) {\r\n                const { recent_speakers } = groupCall;\r\n                speakers = recent_speakers;\r\n            }\r\n\r\n            return {\r\n                prevId: id,\r\n                speakers\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    loadContent(speakers) {\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, speakers.map(x => x.user_id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.speakers);\r\n\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { id } = this.props;\r\n        const { group_call } = update;\r\n\r\n        if (group_call && group_call.id !== id) return;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        clearTimeout(this.timeout);\r\n        if (!speakers.length) {\r\n            this.setState({ speakers: [] });\r\n        } else {\r\n            this.loadContent(speakers);\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.updateSpeakers();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        }\r\n    };\r\n\r\n    updateSpeakers() {\r\n        const { id } = this.props;\r\n\r\n        let speakers = [];\r\n        const groupCall = CallStore.get(id);\r\n        if (groupCall) {\r\n            const { recent_speakers } = groupCall;\r\n            speakers = recent_speakers;\r\n        }\r\n\r\n        this.setState({ speakers });\r\n    }\r\n\r\n    render() {\r\n        const { speakers } = this.state;\r\n        if (!speakers) return null;\r\n        if (!speakers.length) return null;\r\n\r\n        return (\r\n            <div className='group-call-recent-participants'>\r\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallRecentParticipants.propTypes = {\r\n    id: PropTypes.number\r\n};\r\n\r\nexport default GroupCallRecentParticipants;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './GroupCallJoinPanel.css';\r\n\r\nclass GroupCallJoinPanel extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n\r\n            let groupCallId = 0;\r\n            if (chat) {\r\n                const { voice_chat_group_call_id } = chat;\r\n                groupCallId = voice_chat_group_call_id;\r\n            }\r\n\r\n            const { currentGroupCall } = CallStore;\r\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                groupCallId,\r\n                isCurrent\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { isCurrent, groupCallId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.groupCallId !== groupCallId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isCurrent !== isCurrent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\r\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\r\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\r\n    }\r\n\r\n    handleUpdateChatVoiceChat = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if ( chatId !== chat_id) return;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n\r\n        this.setState({\r\n            groupCallId: voice_chat_group_call_id\r\n        });\r\n    }\r\n\r\n    handleUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\r\n\r\n        this.setState({\r\n            groupCallId: group_call ? group_call.id : 0\r\n        });\r\n    };\r\n\r\n    handleClientUpdateGroupCall = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\r\n\r\n        this.setState({ isCurrent });\r\n    };\r\n\r\n    handleJoin = async () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { voice_chat_group_call_id } = chat;\r\n        const groupCall = CallStore.get(voice_chat_group_call_id);\r\n        console.log('[call] handleJoin', groupCall);\r\n        if (groupCall && groupCall.is_joined) return;\r\n\r\n        const muted = true;\r\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const { groupCallId, isCurrent } = this.state;\r\n        if (!groupCallId) return null;\r\n        if (isCurrent) return null;\r\n\r\n        return (\r\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\r\n                <div className='group-call-join-panel-content'>\r\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\r\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallRecentParticipants id={groupCallId}/>\r\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\r\n                    {t('VoipChatJoin')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallJoinPanel.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallJoinPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        // console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\n\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, via_bot_user_id } = message;\r\n                let userId = sender.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat){\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                const { url } = type;\r\n\r\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        const icon = this.getIcon(type);\r\n\r\n        return (\r\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                {text}\r\n                {icon}\r\n                {loading && (\r\n                    <PendingIcon\r\n                        className='keyboard-button-progress'\r\n                        viewBox='0 0 14 14'\r\n                    />\r\n                )}\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\r\n\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {showMeta && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        const { prevScrollTop, prevOffsetHeight } = this;\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender, prevMessage.sender) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <div className='messages-list-top-panel'>\r\n                    <GroupCallJoinPanel chatId={chatId}/>\r\n                    <ActionBar chatId={chatId} />\r\n                </div>\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/*<InputBoxHints />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <GroupCallTopPanel/>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        messageIds.sort();\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlobDrawable, {\r\n    AMPLITUDE_SPEED,\r\n    FORM_BIG_MAX,\r\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\r\n    SCALE_BIG,\r\n    SCALE_BIG_MIN,\r\n    SCALE_SMALL,\r\n    SCALE_SMALL_MIN\r\n} from './BlobDrawable';\r\nimport {\r\n    MUTE_BUTTON_STATE_CONNECTING,\r\n    MUTE_BUTTON_STATE_MUTE,\r\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\r\n    MUTE_BUTTON_STATE_UNMUTE\r\n} from './TopBar';\r\nimport { stopPropagation } from '../../Utils/Message';\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\r\nclass OvershootInterpolator {\r\n    constructor(tension) {\r\n        this.mTension = tension;\r\n    }\r\n\r\n    getInterpolation(t) {\r\n        // _o(t) = t * t * ((tension + 1) * t + tension)\r\n        // o(t) = _o(t - 1) + 1\r\n        t -= 1.0;\r\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\r\n    }\r\n}\r\n\r\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\r\nclass DecelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        let result;\r\n        if (this.mFactor === 1.0) {\r\n            result = 1.0 - (1.0 - input) * (1.0 - input);\r\n        } else {\r\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\r\nclass AccelerateInterpolator {\r\n    constructor(factor) {\r\n        this.mFactor = factor || 1.0;\r\n        this.mDoubleFactor = 2 * this.mFactor;\r\n    }\r\n\r\n    getInterpolation(input) {\r\n        if (this.mFactor === 1.0) {\r\n            return input * input;\r\n        }\r\n\r\n        return Math.pow(input, this.mDoubleFactor);\r\n    }\r\n}\r\n\r\nclass WeavingState {\r\n    constructor(stateId) {\r\n        this.stateId = stateId;\r\n        this.shader = (ctx, left, top, right, bottom) => { };\r\n        this.createGradient(stateId);\r\n    }\r\n\r\n    createGradient(stateId) {\r\n        this.shader = (ctx, left, top, right, bottom) => {\r\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\r\n        };\r\n    }\r\n\r\n    update(top, left, size, dt) {\r\n        // TODO: move gradient here\r\n    }\r\n\r\n    // Android colors\r\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\r\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\r\n\r\n            gradient.addColorStop(0, '#57A4FE');\r\n            gradient.addColorStop(.3, '#766EE9');\r\n            gradient.addColorStop(1, '#F05459');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\r\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#77E55C');\r\n            gradient.addColorStop(1, '#56C7FE');\r\n\r\n            return gradient;\r\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\r\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\r\n\r\n            gradient.addColorStop(0, '#66D4FB');\r\n            gradient.addColorStop(1, '#539EF8');\r\n\r\n            return gradient;\r\n        } else {\r\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\r\n\r\n            gradient.addColorStop(0, '#2B333E');\r\n            gradient.addColorStop(1, '#2B333E');\r\n\r\n            return gradient;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadialProgressView {\r\n    constructor() {\r\n        this.decelerateInterpolator = new DecelerateInterpolator();\r\n        this.accelerateInterpolator = new AccelerateInterpolator();\r\n\r\n        this.lineCap = 'round';\r\n        this.lineWidth = 3;\r\n        this.progressColor = '#1C93E3';\r\n        this.updateProgressPaint();\r\n\r\n        this.lastUpdateTime = 0;\r\n        this.radOffset = 0;\r\n        this.currentCircleLength = 0;\r\n        this.risingCircleLength = false;\r\n        this.currentProgressTime = 0;\r\n        this.useSelfAlpha = false;\r\n        this.drawingCircleLength = 0;\r\n\r\n        this.rotationTime = 2000;\r\n        this.risingTime = 500;\r\n        this.size = 0;\r\n\r\n        this.currentProgress = 0;\r\n        this.progressAnimationStart = 0;\r\n        this.progressTime = 0;\r\n        this.animatedProgress = 0;\r\n        this.circle = false;\r\n        this.circleProgress = 0;\r\n        this.noProgress = true;\r\n    }\r\n\r\n    setUseSelfAlpha = value => {\r\n        this.useSelfAlpha = value;\r\n    };\r\n\r\n    setAlpha = alpha => {\r\n        console.log('[rpv] setAlpha', alpha);\r\n    };\r\n\r\n    setNoProgress = value => {\r\n        this.noProgress = value;\r\n    };\r\n\r\n    setProgress = value => {\r\n        this.currentProgress = value;\r\n        if (this.animatedProgress > value) {\r\n            this.animatedProgress = value;\r\n        }\r\n\r\n        this.progressAnimationStart = this.animatedProgress;\r\n        this.progressTime = 0;\r\n    };\r\n\r\n    updateAnimation = () => {\r\n        const newTime = new Date();\r\n        let dt = newTime - this.lastUpdateTime;\r\n        if (dt > 17) {\r\n            dt = 17;\r\n        }\r\n        this.lastUpdateTime = newTime;\r\n\r\n        this.radOffset += 360 * dt / this.rotationTime;\r\n        let count = Math.trunc(this.radOffset / 360);\r\n        this.radOffset -= count * 360;\r\n\r\n        if (this.circle && this.circleProgress !== 1.0) {\r\n            this.circleProgress += 16 / 220;\r\n            if (this.circleProgress > 1.0) {\r\n                this.circleProgress = 1.0;\r\n            }\r\n        } else if (!this.circle && this.circleProgress !== 0.0) {\r\n            this.circleProgress -= 16 / 400;\r\n            if (this.circleProgress < 0) {\r\n                this.circleProgress = 0;\r\n            }\r\n        }\r\n\r\n        if (this.noProgress) {\r\n            if (this.circleProgress === 0) {\r\n                this.currentProgressTime += dt;\r\n                if (this.currentProgressTime >= this.risingTime) {\r\n                    this.currentProgressTime = this.risingTime;\r\n                }\r\n                if (this.risingCircleLength) {\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                } else {\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                }\r\n\r\n                if (this.currentProgressTime === this.risingTime) {\r\n                    if (this.risingCircleLength) {\r\n                        this.radOffset += 270;\r\n                        this.currentCircleLength = -266;\r\n                    }\r\n\r\n                    this.risingCircleLength = !this.risingCircleLength;\r\n                    this.currentProgressTime = 0;\r\n                }\r\n            } else {\r\n                if (this.risingCircleLength) {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\r\n                    this.currentCircleLength += 360 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                } else {\r\n                    const old = this.currentCircleLength;\r\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\r\n                    this.currentCircleLength -= 364 * this.circleProgress;\r\n                    const dx = old - this.currentCircleLength;\r\n                    if (dx > 0) {\r\n                        this.radOffset += old - this.currentCircleLength;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\r\n            if (progressDiff > 0) {\r\n                progressDiff += dt;\r\n                if (this.progressTime >= 200) {\r\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\r\n                    this.progressTime = 0;\r\n                } else {\r\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\r\n                }\r\n            }\r\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\r\n        }\r\n    };\r\n\r\n    setSize = size => {\r\n        this.size = size;\r\n    };\r\n\r\n    setStrokeWidth = value => {\r\n        this.lineWidth = value;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    setProgressColor = color => {\r\n        this.progressColor = color;\r\n        this.updateProgressPaint();\r\n    };\r\n\r\n    updateProgressPaint() {\r\n        this.progressPaint = ctx => {\r\n            if (this.lineCap) {\r\n                ctx.lineCap = this.lineCap;\r\n            }\r\n            if (this.lineWidth) {\r\n                ctx.lineWidth = this.lineWidth;\r\n            }\r\n            if (this.progressColor) {\r\n                ctx.strokeStyle = this.progressColor;\r\n            }\r\n        };\r\n    }\r\n\r\n    toCircle = (toCircle, animated) => {\r\n        this.circle = toCircle;\r\n        if (!animated) {\r\n            this.circleProgress = this.circle ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    draw = (canvas, cx, cy, scale = 1) => {\r\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            ctx.save();\r\n            ctx.beginPath();\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale, scale);\r\n            ctx.beginPath();\r\n            if (!this.risingCircleLength) {\r\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\r\n                    this.currentCircleLength = 0;\r\n                }\r\n            }\r\n\r\n            const radStart = this.radOffset * Math.PI / 180;\r\n            this.drawingCircleLength = this.currentCircleLength;\r\n            const radLength = this.drawingCircleLength * Math.PI / 180;\r\n\r\n\r\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\r\n            this.progressPaint(ctx);\r\n            ctx.stroke();\r\n            ctx.restore();\r\n\r\n            this.updateAnimation();\r\n        }\r\n    }\r\n\r\n    isCircle = () => {\r\n        return Math.abs(this.drawingCircleLength) >= 360;\r\n    }\r\n}\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.focused = true;\r\n        this.radialPaint = ctx => { };\r\n        this.paint = ctx => { };\r\n        this.paintTmp = ctx => { };\r\n        this.lastUpdateTime = new Date();\r\n        this.amplitude = 0.0;\r\n\r\n        this.states = [\r\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\r\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\r\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\r\n        ];\r\n        this.switchProgress = 1.0;\r\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\r\n        this.prevState = null;\r\n        this.currentState = this.states[this.muteButtonState];\r\n        this.progressToState = 1.0;\r\n\r\n        this.showLightingProgress = 1.0;\r\n        this.showWavesProgress = 1.0;\r\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\r\n        this.colorsTmp = new Array(3);\r\n\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n\r\n        this.buttonDefaultRadius = 57;\r\n        this.buttonRadius = 52;\r\n        this.strokeWidth = 4;\r\n        this.invalidateColors = true;\r\n        this.radialProgressView = new RadialProgressView();\r\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\r\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\r\n        this.radialProgressView.setProgressColor('#28BAFF');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        window.addEventListener('blur', this.handleBlur);\r\n        window.addEventListener('focus', this.handleFocus);\r\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n\r\n\r\n        this.canvas = document.getElementById('button-canvas');\r\n        this.tinyWaveDrawable = new BlobDrawable(9);\r\n        this.bigWaveDrawable = new BlobDrawable(12);\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.generateInitBlob();\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.generateInitBlob();\r\n\r\n        const color = '#66D4FB';\r\n        this.radialGradient = ctx => {\r\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\r\n            gradient.addColorStop(0, color + '32');\r\n            gradient.addColorStop(1, color + '00');\r\n\r\n            ctx.fillStyle = gradient;\r\n        };\r\n        this.radialPaint = this.radialGradient;\r\n\r\n        this.setAmplitude(this.amplitude);\r\n\r\n        // console.log('[button] componentDidMount draw');\r\n        this.draw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        window.removeEventListener('blur', this.handleBlur);\r\n        window.removeEventListener('focus', this.handleFocus);\r\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\r\n    }\r\n\r\n    handleFocus = () => {\r\n        this.focused = true;\r\n        this.invokeDraw();\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.focused = false;\r\n    }\r\n\r\n    invokeDraw = () => {\r\n        if (this.raf) return;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    handleDevicePixelRatioChanged = e => {\r\n        this.scale = window.devicePixelRatio;\r\n        this.left = 0 * this.scale;\r\n        this.top = 0 * this.scale;\r\n        this.right = 380 * this.scale;\r\n        this.bottom = (220 + 28) * this.scale;\r\n        this.cx = 190 * this.scale;\r\n        this.cy = (110 + 28) * this.scale;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    fillColors(stateId, colorsToSet) {\r\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\r\n            colorsToSet[0] = '#66D4FB';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\r\n            colorsToSet[0] = '#7DDCAA';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\r\n            colorsToSet[0] = '#766EE9';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        } else {\r\n            colorsToSet[0] = '#1C2229';\r\n            colorsToSet[1] = '';\r\n            colorsToSet[2] = '';\r\n        }\r\n    }\r\n\r\n    strToHex(n) {\r\n        let s = n.toString(16);\r\n        if (s.length === 1) {\r\n            s = '0' + s;\r\n        }\r\n        return s;\r\n    }\r\n\r\n    blendARGB(color1, color2, ratio) {\r\n        if (color1.length <= 7) {\r\n            color1 += 'FF';\r\n        }\r\n        if (color2.length <= 7) {\r\n            color2 += 'FF';\r\n        }\r\n        const c1 = {\r\n            r: parseInt(color1.substr(1, 2), 16),\r\n            g: parseInt(color1.substr(3, 2), 16),\r\n            b: parseInt(color1.substr(5, 2), 16),\r\n            a: parseInt(color1.substr(7, 2), 16),\r\n        };\r\n        const c2 = {\r\n            r: parseInt(color2.substr(1, 2), 16),\r\n            g: parseInt(color2.substr(3, 2), 16),\r\n            b: parseInt(color2.substr(5, 2), 16),\r\n            a: parseInt(color2.substr(7, 2), 16),\r\n        };\r\n\r\n        const inverseRatio = 1 - ratio;\r\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\r\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\r\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\r\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\r\n\r\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\r\n    }\r\n\r\n    draw = (force = false) => {\r\n        this.raf = null;\r\n        if (!this.mounted) {\r\n            return;\r\n        }\r\n        if (!this.focused && this.switchProgress >= 1.0) {\r\n            return;\r\n        }\r\n        // console.log('[button] draw', [this.focused, this.mounted]);\r\n        const { currentState, prevState, left, top, right, bottom } = this;\r\n\r\n        const newTime = new Date();\r\n        let dt = (newTime - this.lastUpdateTime);\r\n        if (dt > 20) {\r\n            dt = 17;\r\n        }\r\n\r\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\r\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\r\n\r\n        if (this.animateToAmplitude !== this.amplitude) {\r\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\r\n            if (this.animateAmplitudeDiff > 0) {\r\n                if (this.amplitude > this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            } else {\r\n                if (this.amplitude < this.animateToAmplitude) {\r\n                    this.amplitude = this.animateToAmplitude;\r\n                }\r\n            }\r\n        }\r\n\r\n        let canSwitchProgress = true;\r\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, true);\r\n            if (!this.radialProgressView.isCircle()) {\r\n                canSwitchProgress = false;\r\n            }\r\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n            this.radialProgressView.toCircle(true, false);\r\n        }\r\n\r\n        if (canSwitchProgress) {\r\n            if (this.switchProgress !== 1) {\r\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.switchProgress += dt / 100;\r\n                } else {\r\n                    this.switchProgress += dt / 180;\r\n                }\r\n\r\n                if (this.switchProgress >= 1.0) {\r\n                    this.switchProgress = 1.0;\r\n                    this.prevState = null;\r\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        this.radialProgressView.toCircle(false, true);\r\n                    }\r\n                }\r\n                this.invalidateColors = true;\r\n            }\r\n\r\n            if (this.invalidateColors && currentState) {\r\n                this.invalidateColors = false;\r\n                let lightingColor;\r\n                if (prevState) {\r\n                    this.fillColors(prevState.stateId, this.colorsTmp);\r\n                    const oldLight = this.colorsTmp[0];\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    const newLight = this.colorsTmp[0];\r\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\r\n                } else {\r\n                    this.fillColors(currentState.stateId, this.colorsTmp);\r\n                    lightingColor = this.colorsTmp[0];\r\n                }\r\n                if (this.currentLightColor !== lightingColor) {\r\n                    this.radialGradient = ctx => {\r\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\r\n\r\n                        gradient.addColorStop(0, lightingColor + '3C');\r\n                        gradient.addColorStop(1, lightingColor + '00');\r\n\r\n                        ctx.fillStyle = gradient;\r\n                    };\r\n                    this.currentLightColor = lightingColor;\r\n                }\r\n            }\r\n\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n\r\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                this.showWavesProgress -= dt / 180;\r\n                if (this.showWavesProgress < 0) {\r\n                    this.showWavesProgress = 0;\r\n                }\r\n            } else {\r\n                if (showWaves && this.showWavesProgress !== 1) {\r\n                    this.showWavesProgress += dt / 350;\r\n                    if (this.showWavesProgress > 1) {\r\n                        this.showWavesProgress = 1;\r\n                    }\r\n                } else if (!showWaves && this.showWavesProgress !== 0) {\r\n                    this.showWavesProgress -= dt / 350;\r\n                    if (this.showWavesProgress < 0) {\r\n                        this.showWavesProgress = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (showLighting && this.showLightingProgress !== 1) {\r\n                this.showLightingProgress += dt / 350;\r\n                if (this.showLightingProgress > 1) {\r\n                    this.showLightingProgress = 1;\r\n                }\r\n            } else if (!showLighting && this.showLightingProgress !== 0) {\r\n                this.showLightingProgress -= dt / 350;\r\n                if (this.showLightingProgress < 0) {\r\n                    this.showLightingProgress = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\r\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\r\n\r\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\r\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.resetTransform();\r\n\r\n        const cx = this.cx;\r\n        const cy = this.cy;\r\n\r\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\r\n            let progress;\r\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                progress = this.switchProgress;\r\n                this.paint = prevState.shader;\r\n            } else {\r\n                progress = 1.0 - this.switchProgress;\r\n                this.paint = currentState.shader;\r\n            }\r\n\r\n            this.paintTmp = ctx => {\r\n                ctx.fillStyle = '#2B333E';\r\n            }\r\n\r\n            let paint = ctx => {\r\n                this.paint(ctx, left, top, right, bottom);\r\n            };\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n\r\n            ctx.globalAlpha = 0.3;\r\n            // big wave\r\n            ctx.save();\r\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            // small wave\r\n            ctx.save();\r\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n            ctx.translate(cx, cy);\r\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n            ctx.restore();\r\n\r\n            ctx.globalAlpha = 1.0;\r\n            if (canSwitchProgress) {\r\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                paint = ctx => {\r\n                    ctx.fillStyle = '#28BAFF';\r\n                };\r\n                if (progress !== 0) {\r\n                    ctx.globalAlpha = progress;\r\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1.0;\r\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\r\n            if  (!canSwitchProgress) {\r\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                ctx.globalAlpha = 1.0;\r\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\r\n                if (i === 1) {\r\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\r\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\r\n                }\r\n\r\n                ctx.globalAlpha = 0.3 * alpha;\r\n                // big wave\r\n                ctx.save();\r\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\r\n                ctx.restore();\r\n\r\n                // small wave\r\n                ctx.save();\r\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\r\n                ctx.translate(cx, cy);\r\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\r\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\r\n                ctx.restore();\r\n            }\r\n\r\n            // button\r\n            for (let i = 0; i < 2; i++) {\r\n                let alpha = 0;\r\n                let buttonRadius = this.buttonRadius;\r\n                let paint = null;\r\n                if (i === 0 && prevState) {\r\n                    paint = prevState.shader;\r\n                    alpha = 1 - this.switchProgress;\r\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else if (i === 1) {\r\n                    paint = currentState.shader;\r\n                    alpha = this.switchProgress;\r\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                        buttonRadius -= alpha * 2;\r\n                    }\r\n                } else {\r\n                    continue;\r\n                }\r\n\r\n                if (!paint) {\r\n                    paint = ctx => {\r\n                        ctx.fillStyle = '#2B333E';\r\n                    };\r\n                }\r\n\r\n                if (i === 0) {\r\n                    ctx.globalAlpha = 1.0;\r\n                } else {\r\n                    ctx.globalAlpha = alpha;\r\n                }\r\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\r\n\r\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\r\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!force) {\r\n            this.raf = requestAnimationFrame(() => this.draw());\r\n        }\r\n    };\r\n\r\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.translate(cx, cy);\r\n        ctx.scale(scale, scale);\r\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\r\n        ctx.closePath();\r\n        paint && paint(ctx);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    setCurrentState = (stateId, animated) => {\r\n        const { currentState, states } = this;\r\n\r\n        if (currentState && currentState.id === stateId) {\r\n            return;\r\n        }\r\n\r\n        this.previousState = animated ? currentState : null;\r\n        this.currentState = states[stateId];\r\n        this.progressToState = this.previousState ? 0.0 : 1.0;\r\n    };\r\n\r\n    updateMuteButton = (stateId, animated) => {\r\n        const { muteButtonState } = this;\r\n        if (muteButtonState === stateId && animated) {\r\n            return;\r\n        }\r\n\r\n        // TODO: add text animation\r\n\r\n        if (animated) {\r\n            this.muteButtonState = stateId;\r\n        } else {\r\n            this.muteButtonState = stateId;\r\n        }\r\n        this.updateMuteButtonState(animated);\r\n    }\r\n\r\n    updateMuteButtonState (animated) {\r\n        const { states, currentState, muteButtonState } = this;\r\n\r\n        if (states[muteButtonState] !== currentState) {\r\n            this.prevState = currentState;\r\n            this.currentState = states[muteButtonState];\r\n            if (!this.prevState || !animated) {\r\n                this.switchProgress = 1.0;\r\n                this.prevState = null;\r\n            } else {\r\n                this.switchProgress = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!animated) {\r\n            let showWaves = false;\r\n            let showLighting = false;\r\n            if (currentState) {\r\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\r\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\r\n            }\r\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\r\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\r\n        }\r\n    }\r\n\r\n    setAmplitude(value) {\r\n        this.animateToAmplitude = value;\r\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\r\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\r\n    }\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const { children, onClick } = this.props;\r\n        const { left, right, top, bottom, scale } = this;\r\n\r\n        return (\r\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\r\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    background: 'transparent',\r\n                    width: 104,\r\n                    height: 104,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    left: '50%',\r\n                    top: '50%',\r\n                    marginLeft: -52,\r\n                    marginTop: -38,\r\n                    cursor: 'pointer'\r\n                }}\r\n                     onMouseDown={stopPropagation}\r\n                     onClick={onClick}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nButton.propTypes = {};\r\n\r\nexport default Button;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\r\nimport './GroupCallMicButtonHint.css';\r\n\r\nclass GroupCallMicButtonHint extends React.Component {\r\n\r\n    getItemTemplate = item => {\r\n        const { t } = this.props;\r\n\r\n        let title = '';\r\n        let subtitle = '';\r\n        switch (item) {\r\n            case 'muted': {\r\n                title = t('VoipGroupUnmute');\r\n                subtitle = t('VoipHoldAndTalk');\r\n                break;\r\n            }\r\n            case 'unmuted': {\r\n                title = t('VoipTapToMute');\r\n                break;\r\n            }\r\n            case 'forceMuted': {\r\n                title = t('VoipMutedByAdmin');\r\n                subtitle = t('VoipMutedByAdminInfo');\r\n                break;\r\n            }\r\n            case 'connecting': {\r\n                title = t('Connecting');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='group-call-mic-button-hint-item'>\r\n                <div className='group-call-mic-button-hint-title'>{title}</div>\r\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { className, status } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('group-call-mic-button-hint', className)}>\r\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallMicButtonHint.propTypes = {\r\n    status: PropTypes.string\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButtonHint);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from './Button';\r\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\r\nimport MicIcon from '../../Assets/Icons/Mic';\r\nimport MicOffIcon from '../../Assets/Icons/MicOff';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallMicButton.css';\r\n\r\nclass GroupCallMicButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.buttonRef = React.createRef();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected,\r\n            animated: CallStore.animated\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected, animated, shook } = this.state;\r\n\r\n        if (animated !== nextState.animated) {\r\n            return true;\r\n        }\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (shook !== nextState.shook) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.switchButtonState(false);\r\n\r\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onClientUpdateGroupCallAmplitudeChange = update => {\r\n        const { amplitudes } = update;\r\n        if (!amplitudes.length) return;\r\n\r\n        for (let i = 0; i < amplitudes.length; i++) {\r\n            const { type, value } = amplitudes[i];\r\n            if (type === 'input') {\r\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    switchButtonState(animated = true) {\r\n        const { connected, status } = this.state;\r\n\r\n        let stateId = MUTE_BUTTON_STATE_MUTE;\r\n        if (!connected) {\r\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\r\n        } else {\r\n            if (status === 'forceMuted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\r\n            } else if (status === 'unmuted') {\r\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\r\n            } else if (status === 'muted') {\r\n                stateId = MUTE_BUTTON_STATE_MUTE;\r\n            }\r\n        }\r\n\r\n\r\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id, is_muted } = participant\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        }, () => {\r\n            this.switchButtonState();\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId, stream } = call;\r\n\r\n        const groupCall = CallStore.get(groupCallId);\r\n        if (!groupCall) return;\r\n\r\n        if (!groupCall.can_unmute_self) {\r\n            const { shook } = this.state;\r\n            if (shook) {\r\n                this.setState({\r\n                    shook: false\r\n                }, () => {\r\n                    requestAnimationFrame(() => {\r\n                        this.setState({ shook: true });\r\n                    })\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    shook: true\r\n                });\r\n            }\r\n        } else {\r\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { status, connected, animated, shook } = this.state;\r\n        // console.log('[call][GroupCallMicButton] render');\r\n\r\n        return (\r\n            <div className='group-call-mic-button-wrapper' >\r\n                {animated ? (\r\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </Button>\r\n                ) : (\r\n                    <div className={classNames('group-call-mic-button',\r\n                        {\r\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\r\n                            'group-call-unmuted': connected && status === 'unmuted',\r\n                            'group-call-connecting': !connected,\r\n                        })}\r\n                         onClick={this.handleClick}\r\n                    >\r\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\r\n                    </div>\r\n                )}\r\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCallMicButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(GroupCallMicButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getCallStatus } from '../../Calls/Utils';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallPanelButtons.css'\r\n\r\nclass GroupCallPanelButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.state = {\r\n            call,\r\n            status,\r\n            connected\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { status, connected } = this.state;\r\n\r\n        if (connected !== nextState.connected) {\r\n            return true;\r\n        }\r\n\r\n        if (status !== nextState.status) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\r\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call_id !== call.groupCallId) return;\r\n\r\n        const { user_id } = participant;\r\n        if (user_id !== UserStore.getMyId()) return;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            status\r\n        });\r\n    }\r\n\r\n    onUpdateGroupCall = update => {\r\n        const { group_call } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (group_call.id !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCallConnectionState = update => {\r\n        const { groupCallId } = update;\r\n        const { call } = this.state;\r\n        if (!call) return;\r\n\r\n        if (groupCallId !== call.groupCallId) return;\r\n\r\n        this.onClientUpdateGroupCall(update);\r\n    };\r\n\r\n    onClientUpdateGroupCall = update => {\r\n        const { currentGroupCall: call } = CallStore;\r\n\r\n        const { connected, status } = getCallStatus(call);\r\n        this.setState({\r\n            call,\r\n            status,\r\n            connected\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const { status, connected } = this.state;\r\n        // console.log('[call][GroupCallPanelButtons] render');\r\n\r\n        return (\r\n            <div className={classNames('group-call-panel-buttons', {\r\n                'group-call-connecting': !connected,\r\n                'group-call-muted': connected && status === 'muted',\r\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\r\n                'group-call-unmuted': connected && status === 'unmuted',\r\n            })}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanelButtons.propTypes = {};\r\n\r\nexport default GroupCallPanelButtons;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\r\n    'MicOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\r\n    'MicOffOutlined'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MicIcon from '../../Assets/Icons/MicOutlined';\r\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\r\nimport UserTile from '../Tile/UserTile';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { openUser } from '../../Actions/Client';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './GroupCallParticipant.css';\r\n\r\nclass GroupCallParticipant extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        participant: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { userId, groupCallId } = props;\r\n        const { prevUserId, prevGroupCallId } = state;\r\n\r\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\r\n            const participants = CallStore.participants.get(groupCallId) || new Map();\r\n            const participant = participants.get(userId);\r\n\r\n            return {\r\n                prevUserId: userId,\r\n                prevGroupCallId: groupCallId,\r\n                participant\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participant, left, top, contextMenu } = this.state;\r\n\r\n        if (participant !== nextState.participant) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId, userId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (groupCallId !== group_call_id) return;\r\n        if (!participant) return;\r\n\r\n        const { user_id } = participant;\r\n        if (userId !== user_id) return;\r\n\r\n        this.setState({\r\n            participant\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { userId } = this.props;\r\n        if (userId === UserStore.getMyId()) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleOpenProfile = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, true);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleSendMessage = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n\r\n        openUser(userId, false);\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, true);\r\n    };\r\n\r\n    handleUnmute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { userId } = this.props;\r\n        CallStore.changeUserMuted(userId, false);\r\n    };\r\n\r\n    render() {\r\n        const { userId, t } = this.props;\r\n        const { contextMenu, left, top, participant } = this.state;\r\n        // console.log('[call][GroupCallParticipant] render', participant);\r\n        if (!participant) return null;\r\n\r\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\r\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\r\n\r\n        return (\r\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\r\n                <UserTile userId={userId}/>\r\n                <div className='group-call-participant-content'>\r\n                    <div className='group-call-participant-content-title'>\r\n                        {/*{userId}*/}\r\n                        {getUserFullName(userId)}\r\n                    </div>\r\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\r\n                        {/*{order}*/}\r\n                        {is_speaking ? t('Speaking') : t('Listening')}\r\n                    </div>\r\n                </div>\r\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\r\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\r\n                </div>\r\n\r\n                <Popover\r\n                    classes={{\r\n                        paper: 'group-call-participant-menu-root'\r\n                    }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        { can_be_unmuted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleUnmute}>\r\n                                <ListItemText primary={t('VoipGroupUnmute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        { can_be_muted_for_all_users && (\r\n                            <MenuItem\r\n                                classes={{ root: 'group-call-participant-menu-item' }}\r\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                                TouchRippleProps={{\r\n                                    classes : {\r\n                                        child : 'group-call-participant-menu-item-ripple-child',\r\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                    }\r\n                                }}\r\n                                onClick={this.handleMute}>\r\n                                <ListItemText primary={t('VoipGroupMute')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleOpenProfile}>\r\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            classes={{ root: 'group-call-participant-menu-item' }}\r\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\r\n                            TouchRippleProps={{\r\n                                classes : {\r\n                                    child : 'group-call-participant-menu-item-ripple-child',\r\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\r\n                                }\r\n                            }}\r\n                            onClick={this.handleSendMessage}>\r\n                            <ListItemText primary={t('SendMessage')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nGroupCallParticipant.propTypes = {\r\n    userId: PropTypes.number,\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipant);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport GroupCallParticipant from './GroupCallParticipant';\r\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\r\nimport { canManageVoiceChats } from '../../Utils/Chat';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './GroupCallParticipants.css';\r\n\r\nclass GroupCallParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            participants: []\r\n        };\r\n\r\n        this.participantsMap = new Map();\r\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { groupCallId } = props;\r\n        const { prevGroupCallId } = state;\r\n\r\n        if (prevGroupCallId !== groupCallId) {\r\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n            return {\r\n                prevGroupCallId: groupCallId,\r\n                participants: participants.map(x => x.user_id)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { participants } = this.state;\r\n        if (!albumHistoryEquals(participants, nextState.participants)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.preloadContent();\r\n\r\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\r\n    }\r\n\r\n    onUpdateGroupCallParticipant = update => {\r\n        const { groupCallId } = this.props;\r\n        const { group_call_id, participant } = update;\r\n        if (!participant) return;\r\n\r\n        if (group_call_id !== groupCallId) return;\r\n\r\n        const { order, user_id } = participant;\r\n        if (order !== '0') {\r\n            this.participantsMap.set(user_id, user_id);\r\n            this.loadContent();\r\n\r\n            // wait for profile photo\r\n            setTimeout(() => {\r\n                this.updateParticipants();\r\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\r\n        } else {\r\n            this.updateParticipants();\r\n        }\r\n    };\r\n\r\n    updateParticipants() {\r\n        const { groupCallId } = this.props;\r\n\r\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\r\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\r\n\r\n        this.setState({\r\n            participants: participants.map(x => x.user_id)\r\n        });\r\n    }\r\n\r\n    preloadContent = () => {\r\n        const { participants } = this.state;\r\n        if (!participants) return;\r\n        if (!participants.length) return;\r\n\r\n        participants.forEach(x => {\r\n            this.participantsMap.set(x, x);\r\n        });\r\n        this.loadContent();\r\n    };\r\n\r\n    loadContent = () => {\r\n        const { participantsMap } = this;\r\n        if (!participantsMap) return;\r\n        if (!participantsMap.size) return;\r\n\r\n        this.participantsMap = new Map();\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, Array.from(participantsMap.keys()));\r\n    }\r\n\r\n    render() {\r\n        const { t, groupCallId } = this.props;\r\n        const { participants } = this.state;\r\n        // console.log('[call][GroupCallParticipants] render');\r\n\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        const manageGroupCalls = canManageVoiceChats(chatId);\r\n\r\n        return (\r\n            <div className='group-call-participants'>\r\n                { manageGroupCalls && (\r\n                    <div className='group-call-participants-invite'>\r\n                        <AddMemberIcon/>\r\n                        <div className='group-call-participants-invite-text'>\r\n                            {t('VoipGroupInviteMember')}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallParticipants.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallParticipants);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\r\n    'Tune'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TuneIcon from '../../Assets/Icons/Tune';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport './GroupCallSettingsButton.css';\r\n\r\nclass GroupCallSettingsButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\r\n                <TuneIcon />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallSettingsButton.propTypes = {\r\n    groupCallId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default GroupCallSettingsButton;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport GroupCallMicButton from './GroupCallMicButton';\r\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\r\nimport GroupCallParticipants from './GroupCallParticipants';\r\nimport GroupCallSettings from './GroupCallSettings';\r\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\r\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport { stopPropagation } from '../../Utils/Message';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCallPanel.css';\r\n\r\nclass GroupCallPanel extends React.Component {\r\n    state = {\r\n        openSettings: false\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.handleClose();\r\n    }\r\n\r\n    handleLeave = async event => {\r\n        event.stopPropagation();\r\n\r\n        const { currentGroupCall: call } = CallStore;\r\n        if (!call) return;\r\n\r\n        const { chatId, groupCallId } = call;\r\n\r\n        await CallStore.leaveGroupCall(chatId, groupCallId);\r\n    };\r\n\r\n    handleOpenSettings = async event => {\r\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n        this.setState({\r\n            openSettings: true\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({\r\n            openSettings: false\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    render() {\r\n        const { groupCallId, t } = this.props;\r\n        const { openSettings } = this.state;\r\n        const { currentGroupCall } = CallStore;\r\n        if (!currentGroupCall) return null;\r\n\r\n        const { chatId } = currentGroupCall;\r\n\r\n        return (\r\n            <div className='group-call-panel'>\r\n                <div className='group-call-panel-header'>\r\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </div>\r\n                    <div className='group-call-panel-caption'>\r\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\r\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\r\n                    </div>\r\n                    <div style={{ width: 48 }}/>\r\n                </div>\r\n                <div className='group-call-panel-participants scrollbars-hidden'>\r\n                    <GroupCallParticipants groupCallId={groupCallId}/>\r\n                </div>\r\n                <GroupCallPanelButtons>\r\n                    <GroupCallMicButton/>\r\n                    <div className='group-call-panel-button'>\r\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Settings')}\r\n                        </div>\r\n                    </div>\r\n                    <div className='group-call-panel-button'>\r\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\r\n                            <CallEndIcon />\r\n                        </div>\r\n                        <div className='group-call-panel-button-text'>\r\n                            {t('Leave')}\r\n                        </div>\r\n                    </div>\r\n                </GroupCallPanelButtons>\r\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupCallPanel.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(GroupCallPanel);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport GroupCallPanel from './GroupCallPanel';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { closeGroupCallPanel } from '../../Actions/Call';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\r\nimport CallStore from '../../Stores/CallStore';\r\nimport './GroupCall.css';\r\n\r\nclass GroupCall extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n\r\n        this.state = {\r\n            fullScreen: false\r\n        };\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setPosition();\r\n\r\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n    }\r\n\r\n    onClientUpdateGroupCallFullScreen = update => {\r\n        const { fullscreen } = update;\r\n\r\n        this.setState({ fullscreen });\r\n    };\r\n\r\n    handleClose = () => {\r\n        closeGroupCallPanel();\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        const element = document.getElementById('group-call');\r\n        if (element) element.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        this.left = parseInt(element.style.left, 10);\r\n        this.top = parseInt(element.style.top, 10);\r\n        this.pageX = event.nativeEvent.pageX;\r\n        this.pageY = event.nativeEvent.pageY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.windowDragging = true;\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('group-call');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\r\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\r\n\r\n        const element = document.getElementById('group-call');\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.windowDragging = false;\r\n    };\r\n\r\n    setPosition() {\r\n        const element = document.getElementById('group-call');\r\n        let { pipParams } = CallStore;\r\n        if (!pipParams) {\r\n            pipParams = {\r\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\r\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\r\n            }\r\n        }\r\n\r\n        const { left: prevLeft, top: prevTop } = pipParams;\r\n\r\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\r\n\r\n        element.style.left = left + 'px';\r\n        element.style.top = top + 'px';\r\n    }\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('group-call');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        CallStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    render() {\r\n        const { groupCallId } = this.props;\r\n        const { fullscreen } = this.state;\r\n\r\n        return (\r\n            <div\r\n                id='group-call'\r\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\r\n                onMouseDown={this.handleMouseDown}\r\n            >\r\n                <GroupCallPanel groupCallId={groupCallId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGroupCall.propTypes = {\r\n    groupCallId: PropTypes.number\r\n};\r\n\r\nexport default GroupCall;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport Actions from './Actions';\r\nimport Call from './Calls/Call';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport GroupCall from './Calls/GroupCall';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport CallStore from '../Stores/CallStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null,\r\n            groupCallId: 0,\r\n            callId: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\r\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdateCallPanel = update => {\r\n        const { opened, callId } = update;\r\n\r\n        this.setState({\r\n            callId: opened ? callId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateGroupCallPanel = update => {\r\n        const { opened } = update;\r\n        const { currentGroupCall } = CallStore;\r\n\r\n        this.setState({\r\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\r\n        });\r\n    };\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            callId,\r\n            groupCallId,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\r\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\r\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\r\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\r\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\r\n                {Boolean(callId) && <Call callId={callId}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}